{"version":3,"sources":["webpack:///src/app/pages/company-setting/company-setting-edit/company-setting-edit.component.html","webpack:///src/app/shared/form-validation/control-error/control-error.component.html","webpack:///src/app/pages/company-setting/company-setting-edit/company-setting-edit.component.ts","webpack:///src/app/pages/company-setting/company-setting-edit/company-setting-edit.module.ts","webpack:///src/app/shared/directive/number.directive.ts","webpack:///src/app/shared/form-validation/control-error/control-error.component.ts","webpack:///src/app/shared/form-validation/directive/control-error-container.directive.ts","webpack:///src/app/shared/form-validation/directive/control-errors.directive.ts","webpack:///src/app/shared/form-validation/directive/form-submit.directive.ts","webpack:///src/app/shared/form-validation/form-errors.ts","webpack:///src/app/shared/form-validation/form-validation.module.ts","webpack:///src/app/shared/pipe/status.pipe.ts","webpack:///src/app/shared/shared.module.ts"],"names":["CompanySettingEditComponent","router","activatedRoute","fb","companyservice","dataservice","commonService","PageTitle","editImageUrl","addNewRadio","timezoneListArray","dateFormatListArray","timeFormatListArray","languageListArray","currencyListArray","countryListArray","loadingState","showLoader","formErrors","company_email","apierror","editId","addForm","group","company_name","compose","required","email","phone_no","dial_code","address","country_name","company_domain","company_subdomain","language","currency","time_format","timezone","date_format","country_id","state","city","street_address","currentCompany","subscribe","responce","getCountryList","getMasterData","getEditObject","getCompanyMasterData","res","success","data","country_list","response","company_id","company_logo","patchValue","category_id","value","fileInput","reg","target","files","name","match","swal","fire","removeFile","selectedFile","label","formData","valid","FormData","append","JSON","stringify","editCompany","getProfile","setAuth","navigateByUrl","error","map","obj","hasOwnProperty","selector","template","routes","path","component","CompanySettingEditModule","declarations","imports","forChild","providers","NumberDirective","_el","event","e","indexOf","keyCode","ctrlKey","metaKey","shiftKey","preventDefault","FloatNumberDirective","ControlErrorComponent","cdr","_hide","_text","detectChanges","changeDetection","OnPush","ControlErrorContainerDirective","vcr","ControlErrorsDirective","resolver","controlErrorContainer","form","controlDir","customErrors","container","submit$","control","valueChanges","v","controlErrors","errors","control_name","getFormControlName","firstKey","Object","keys","messages","undefined","setError","ref","c","formGroup","parent","controls","find","text","factory","resolveComponentFactory","createComponent","instance","FormSubmitDirective","host","element","pipe","classList","contains","add","nativeElement","VALIDATION_MESSAGES","first_name","last_name","validateEmail","phone_number","minlength","maxlength","password","pattern","confirm_password","validatePassword","login_pin","number_tag_to_create","max","min","FormValidationModule","exports","entryComponents","TransactionStatusPipe","args","PricePipe","parseFloat","toLocaleString","minimumFractionDigits","TransactionIconsPipe","SharedModule"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAaA,2BAA2B;AAAA;AAAA;AAuBtC,2CACUC,MADV,EAEUC,cAFV,EAGUC,EAHV,EAIUC,cAJV,EAKUC,WALV,EAMUC,aANV,EAMsC;AAAA;;AAL5B,aAAAL,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AA5BV,aAAAC,SAAA,GAAY,cAAZ;AAIA,aAAAC,YAAA,GAAoB,IAApB;AACA,aAAAC,WAAA,GAAuB,KAAvB;AACA,aAAAC,iBAAA,GAAgC,EAAhC;AACA,aAAAC,mBAAA,GAAkC,EAAlC;AACA,aAAAC,mBAAA,GAAkC,EAAlC;AACA,aAAAC,iBAAA,GAAgC,EAAhC;AACA,aAAAC,iBAAA,GAAgC,EAAhC;AACA,aAAAC,gBAAA,GAA+B,EAA/B;AACA,aAAAC,YAAA,GAAe,KAAf;AAEA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,UAAA,GAAa;AACXC,uBAAa,EAAE,IADJ;AAEXC,kBAAQ,EAAE;AAFC,SAAb;AAIA,aAAAC,MAAA,GAAS,IAAT;AAYE,aAAKC,OAAL,GAAe,KAAKnB,EAAL,CAAQoB,KAAR,CAAc;AAC3BC,sBAAY,EAAE,CAAC,IAAD,EAAO,0DAAWC,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CADa;AAE3BP,uBAAa,EAAE,CAAC,IAAD,EAAO,0DAAWM,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,KAAjC,CAAnB,CAAP,CAFY;AAG3BC,kBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAWH,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAHiB;AAI3BG,mBAAS,EAAE,CAAC,GAAD,EAAM,0DAAWJ,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAN,CAJgB;AAK3BI,iBAAO,EAAE,CAAC,IAAD,CALkB;AAM3BC,sBAAY,EAAE,CAAC,IAAD,CANa;AAO3BC,wBAAc,EAAE,CAAC,IAAD,EAAO,0DAAWP,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAPW;AAQ3BO,2BAAiB,EAAE,CAAC,IAAD,EAAO,0DAAWR,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CARQ;AAS3BQ,kBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAWT,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CATiB;AAU3BS,kBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAWV,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAViB;AAW3BU,qBAAW,EAAE,CAAC,IAAD,EAAO,0DAAWX,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAXc;AAY3BW,kBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAWZ,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAZiB;AAa3BY,qBAAW,EAAE,CAAC,IAAD,EAAO,0DAAWb,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAbc;AAc3Ba,oBAAU,EAAE,CAAC,IAAD,EAAO,0DAAWd,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAde;AAe3Bc,eAAK,EAAE,CAAC,IAAD,EAAO,0DAAWf,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAfoB;AAgB3Be,cAAI,EAAE,CAAC,IAAD,EAAO,0DAAWhB,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAhBqB;AAiB3BgB,wBAAc,EAAE,CAAC,IAAD,EAAO,0DAAWjB,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP;AAjBW,SAAd,CAAf;AAmBD;;AAnDqC;AAAA;AAAA,mCAqD3B;AAAA;;AACT,eAAKrB,WAAL,CAAiBsC,cAAjB,CAAgCC,SAAhC,CAA0C,UAACC,QAAD,EAAc;AACtD,gBAAIA,QAAJ,EAAc;AACZ,mBAAI,CAACF,cAAL,GAAsBE,QAAtB;AACD;AACF,WAJD;AAKA,eAAKC,cAAL;AACA,eAAKC,aAAL;AACA,eAAKC,aAAL;AACD;AA9DqC;AAAA;AAAA,wCA+DtB;AAAA;;AACd,eAAK5C,cAAL,CAAoB6C,oBAApB,GAA2CL,SAA3C,CAAqD,UAACM,GAAD,EAAc;AACjE,gBAAIA,GAAG,CAACC,OAAR,EAAiB;AACf,oBAAI,CAACzC,iBAAL,GAAyBwC,GAAG,CAACE,IAAJ,CAASf,QAAlC;AACA,oBAAI,CAAC1B,mBAAL,GAA2BuC,GAAG,CAACE,IAAJ,CAASd,WAApC;AACA,oBAAI,CAAC1B,mBAAL,GAA2BsC,GAAG,CAACE,IAAJ,CAAShB,WAApC;AACA,oBAAI,CAACvB,iBAAL,GAAyBqC,GAAG,CAACE,IAAJ,CAASlB,QAAlC;AACA,oBAAI,CAACpB,iBAAL,GAAyBoC,GAAG,CAACE,IAAJ,CAASjB,QAAlC;AACD;AACF,WARD;AASD;AAzEqC;AAAA;AAAA,yCA0ErB;AAAA;;AACf,eAAK7B,aAAL,CAAmBwC,cAAnB,GAAoCF,SAApC,CAA8C,UAACM,GAAD,EAAc;AAC1D,gBAAIA,GAAG,CAACC,OAAR,EAAiB;AACf,oBAAI,CAACpC,gBAAL,GAAwBmC,GAAG,CAACE,IAAJ,CAASC,YAAjC;AACD;AACF,WAJD;AAKD;AAhFqC;AAAA;AAAA,wCAmFtB;AAAA;;AACd,eAAKhD,WAAL,CAAiBsC,cAAjB,CAAgCC,SAAhC,CAA0C,UAACU,QAAD,EAAc;AACtD,gBAAIA,QAAJ,EAAc;AACZ,oBAAI,CAACjC,MAAL,GAAciC,QAAQ,CAACC,UAAvB;AACA,oBAAI,CAAC/C,YAAL,GAAoB8C,QAAQ,CAACE,YAA7B,EACE,MAAI,CAAClC,OAAL,CAAamC,UAAb,CAAwB;AACtBjC,4BAAY,EAAE8B,QAAQ,CAAC9B,YADD;AAEtBkC,2BAAW,EAAEJ,QAAQ,CAACI,WAFA;AAGtB7B,yBAAS,EAAEyB,QAAQ,CAACzB,SAHE;AAItBV,6BAAa,EAAEmC,QAAQ,CAACnC,aAJF;AAKtBiB,2BAAW,EAAEkB,QAAQ,CAAClB,WAAT,CAAqBuB,KALZ;AAMtBtB,wBAAQ,EAAEiB,QAAQ,CAACjB,QAAT,CAAkBsB,KANN;AAOtBrB,2BAAW,EAAEgB,QAAQ,CAAChB,WAAT,CAAqBqB,KAPZ;AAQtB3B,8BAAc,EAAEsB,QAAQ,CAACtB,cARH;AAStBC,iCAAiB,EAAEqB,QAAQ,CAACrB,iBATN;AAUtBC,wBAAQ,EAAEoB,QAAQ,CAACpB,QAAT,CAAkByB,KAVN;AAWtB/B,wBAAQ,EAAE0B,QAAQ,CAAC1B,QAXG;AAYtBO,wBAAQ,EAAEmB,QAAQ,CAACnB,QAAT,CAAkBwB,KAZN;AAatB5B,4BAAY,EAAEuB,QAAQ,CAACxB,OAAT,CAAiBC,YAbT;AActBQ,0BAAU,EAAEe,QAAQ,CAACxB,OAAT,CAAiBS,UAdP;AAetBC,qBAAK,EAAEc,QAAQ,CAACxB,OAAT,CAAiBU,KAfF;AAgBtBC,oBAAI,EAAEa,QAAQ,CAACxB,OAAT,CAAiBW,IAhBD;AAiBtBC,8BAAc,EAAEY,QAAQ,CAACxB,OAAT,CAAiBY,cAAjB,GAAkCY,QAAQ,CAACxB,OAAT,CAAiBY,cAAnD,GAAoE;AAjB9D,eAAxB,CADF;AAoBD;AACF,WAxBD;AAyBD;AA7GqC;AAAA;AAAA,wCA+GtBkB,SA/GsB,EA+GN;AAC9B,cAAMC,GAAG,GAAG,iCAAZ;;AACA,cAAI,CAACD,SAAS,CAACE,MAAV,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0BC,IAA1B,CAA+BC,KAA/B,CAAqCJ,GAArC,CAAL,EAAgD;AAE9CK,gBAAI,CAACC,IAAL,CACE,eADF,EAEE,2BAFF,EAGE,OAHF;AAKA,iBAAKC,UAAL;AACA,mBAAO,KAAP;AACD,WATD,MASO;AACL,iBAAKA,UAAL;AACA,iBAAKC,YAAL,GAAoBT,SAAS,CAACE,MAAV,CAAiBC,KAAjB,CAAuB,CAAvB,CAApB;AACD;AACF;AA9HqC;AAAA;AAAA,qCAgIzB;AACX,eAAKM,YAAL,GAAoB,IAApB;AACD;AAlIqC;AAAA;AAAA,uCAmIvBjB,IAnIuB,EAmIjB;AACnB,eAAK9B,OAAL,CAAamC,UAAb,CAAwB;AAAE1B,wBAAY,EAAEqB,IAAI,CAACkB;AAArB,WAAxB;AACD;AArIqC;AAAA;AAAA,mCAsI3BC,QAtI2B,EAsId;AAAA;;AACtB,cAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB,iBAAKvD,UAAL,GAAkB,IAAlB;AACA,gBAAMmC,IAAI,GAAG,IAAIqB,QAAJ,EAAb;AACArB,gBAAI,CAACsB,MAAL,CAAY,cAAZ,EAA4BH,QAAQ,CAACZ,KAAT,CAAenC,YAA3C;AACA4B,gBAAI,CAACsB,MAAL,CAAY,eAAZ,EAA6BH,QAAQ,CAACZ,KAAT,CAAexC,aAA5C;AACAiC,gBAAI,CAACsB,MAAL,CAAY,UAAZ,EAAwBH,QAAQ,CAACZ,KAAT,CAAe/B,QAAvC;AACAwB,gBAAI,CAACsB,MAAL,CAAY,gBAAZ,EAA8BH,QAAQ,CAACZ,KAAT,CAAe3B,cAA7C;AACAoB,gBAAI,CAACsB,MAAL,CAAY,mBAAZ,EAAiCH,QAAQ,CAACZ,KAAT,CAAe1B,iBAAhD;AACAmB,gBAAI,CAACsB,MAAL,CAAY,WAAZ,EAAyBH,QAAQ,CAACZ,KAAT,CAAe9B,SAAxC;AACAuB,gBAAI,CAACsB,MAAL,CAAY,UAAZ,EAAwBH,QAAQ,CAACZ,KAAT,CAAezB,QAAvC;AACAkB,gBAAI,CAACsB,MAAL,CAAY,UAAZ,EAAwBH,QAAQ,CAACZ,KAAT,CAAexB,QAAvC;AACAiB,gBAAI,CAACsB,MAAL,CAAY,aAAZ,EAA2BH,QAAQ,CAACZ,KAAT,CAAevB,WAA1C;AACAgB,gBAAI,CAACsB,MAAL,CAAY,UAAZ,EAAwBH,QAAQ,CAACZ,KAAT,CAAetB,QAAvC;AACAe,gBAAI,CAACsB,MAAL,CAAY,aAAZ,EAA2BH,QAAQ,CAACZ,KAAT,CAAerB,WAA1C;AAGA,gBAAIR,OAAO,GAAG;AACZS,wBAAU,EAAEgC,QAAQ,CAACZ,KAAT,CAAepB,UADf;AAEZR,0BAAY,EAAEwC,QAAQ,CAACZ,KAAT,CAAe5B,YAFjB;AAGZS,mBAAK,EAAE+B,QAAQ,CAACZ,KAAT,CAAenB,KAHV;AAIZC,kBAAI,EAAE8B,QAAQ,CAACZ,KAAT,CAAelB,IAJT;AAKZC,4BAAc,EAAE6B,QAAQ,CAACZ,KAAT,CAAejB;AALnB,aAAd;AAOAU,gBAAI,CAACsB,MAAL,CAAY,SAAZ,EAAuBC,IAAI,CAACC,SAAL,CAAe9C,OAAf,CAAvB;;AAEA,gBAAI,KAAKuC,YAAT,EAAuB;AACrBjB,kBAAI,CAACsB,MAAL,CAAY,MAAZ,EAAoB,KAAKL,YAAzB;AACD;;AAED,iBAAKjE,cAAL,CAAoByE,WAApB,CAAgC,KAAKxD,MAArC,EAA6C+B,IAA7C,EAAmDR,SAAnD,CAA6D,UAACU,QAAD,EAAc;AACzE,oBAAI,CAACrC,UAAL,GAAkB,KAAlB;;AACA,kBAAIqC,QAAQ,CAACH,OAAb,EAAsB;AACpB,sBAAI,CAAC7C,aAAL,CAAmBwE,UAAnB,GAAgClC,SAAhC,CAA0C,UAACU,QAAD,EAAc;AACtD,sBAAIA,QAAQ,CAACH,OAAb,EAAsB;AACpB,0BAAI,CAAC9C,WAAL,CAAiB0E,OAAjB,CAAyBzB,QAAQ,CAACF,IAAlC;;AACA,0BAAI,CAACnD,MAAL,CAAY+E,aAAZ,CAA0B,UAA1B;AACD;AACF,iBALD;AAMD,eAPD,MAOO;AACL1B,wBAAQ,CAAC2B,KAAT,CAAeC,GAAf,CAAmB,UAAAC,GAAG,EAAI;AACxB,sBAAIA,GAAG,CAACC,cAAJ,CAAmB,eAAnB,CAAJ,EAAyC;AACvC,0BAAI,CAAClE,UAAL,CAAgB,eAAhB,IAAmCiE,GAAG,CAAC,eAAD,CAAtC;AACD,mBAFD,MAEO;AACL,0BAAI,CAACjE,UAAL,CAAgB,UAAhB,gBAAmCoC,QAAQ,CAAC2B,KAA5C;AACD;AACF,iBAND;AAOD;AACF,aAlBD,EAkBG,UAACA,KAAD,EAAW;AACZ,oBAAI,CAAChE,UAAL,GAAkB,KAAlB;AACD,aApBD;AAsBD;AACF;AA3LqC;;AAAA;AAAA,OAAxC;;;;cAwBoB;;cACQ;;cACZ;;cACY;;cACH;;cACE;;;;AA7BdjB,+BAA2B,6DAJvC,gEAAU;AACTqF,cAAQ,EAAE,0BADD;AAETC,cAAQ,EAAR;AAAA;AAAA;AAFS,KAAV,CAIuC,GAA3BtF,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDN,QAAMuF,MAAM,GAAW,CAC5B;AACEC,UAAI,EAAE,EADR;AACYC,eAAS,EAAE;AADvB,KAD4B,CAAvB;;AAiBP,QAAaC,wBAAwB;AAAA;AAAA,KAArC;;AAAaA,4BAAwB,6DAXpC,+DAAS;AACRC,kBAAY,EAAE,CAAC,2FAAD,CADN;AAERC,aAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,0GAHO,EAIP,mEAJO,EAKP,yEALO,EAMP,6DAAaC,QAAb,CAAsBN,MAAtB,CANO,CAFD;AASLO,eAAS,EAAE,CAAC,8EAAD;AATN,KAAT,CAWoC,GAAxBJ,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBb,QAAaK,eAAe;AAAA;AAAA;AAE1B,+BAAoBC,GAApB,EAAqC;AAAA;;AAAjB,aAAAA,GAAA,GAAAA,GAAA;AAAoB;;AAFd;AAAA;AAAA,kCAIqBC,KAJrB,EAI4B;AACpD,cAAMC,CAAC,GAAkBD,KAAzB;;AACA,cAAI,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,EAAmBE,OAAnB,CAA2BD,CAAC,CAACE,OAA7B,MAA0C,CAAC,CAA3C,IACF;AACCF,WAAC,CAACE,OAAF,KAAc,EAAd,KAAqBF,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACI,OAApC,CAFC,IAGF;AACA;AACA;AACA;AACA;AACCJ,WAAC,CAACE,OAAF,KAAc,EAAd,KAAqBF,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACI,OAApC,CARC,IASF;AACCJ,WAAC,CAACE,OAAF,IAAa,EAAb,IAAmBF,CAAC,CAACE,OAAF,IAAa,EAVnC,EAUwC;AACtC;AACA;AACD,WAfmD,CAgBpD;;;AACA,cAAI,CAACF,CAAC,CAACK,QAAF,IAAeL,CAAC,CAACE,OAAF,GAAY,EAAZ,IAAkBF,CAAC,CAACE,OAAF,GAAY,EAA9C,MAAuDF,CAAC,CAACE,OAAF,GAAY,EAAZ,IAAkBF,CAAC,CAACE,OAAF,GAAY,GAA9B,IACxDF,CAAC,CAACE,OAAF,KAAc,GAD0C,IACjCF,CAAC,CAACE,OAAF,KAAc,GADpC,CAAJ,EAC+C;AAC7CF,aAAC,CAACM,cAAF;AACD;AACF;AAzByB;;AAAA;AAAA,OAA5B;;;;cAE2B;;;;AAEY,8DAApC,mEAAa,SAAb,EAAwB,CAAC,QAAD,CAAxB,CAAoC,G,yBAAA,E,WAAA,E,IAAA;AAJ1BT,mBAAe,6DAH3B,gEAAU;AACTV,cAAQ,EAAE;AADD,KAAV,CAG2B,GAAfU,eAAe,CAAf;;AAiCb,QAAaU,oBAAoB;AAAA;AAAA;AAE/B,oCAAoBT,GAApB,EAAqC;AAAA;;AAAjB,aAAAA,GAAA,GAAAA,GAAA;AAAoB;;AAFT;AAAA;AAAA,kCAIgBC,KAJhB,EAIuB;AACpD,cAAMC,CAAC,GAAkBD,KAAzB;;AACA,cAAI,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,EAAmB,GAAnB,EAAwB,GAAxB,EAA6BE,OAA7B,CAAqCD,CAAC,CAACE,OAAvC,MAAoD,CAAC,CAArD,IACF;AACCF,WAAC,CAACE,OAAF,KAAc,EAAd,KAAqBF,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACI,OAApC,CAFC,IAGF;AACA;AACA;AACA;AACA;AACCJ,WAAC,CAACE,OAAF,KAAc,EAAd,KAAqBF,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACI,OAApC,CARC,IASF;AACCJ,WAAC,CAACE,OAAF,IAAa,EAAb,IAAmBF,CAAC,CAACE,OAAF,IAAa,EAVnC,EAUwC;AACtC;AACA;AACD,WAfmD,CAgBpD;;;AACA,cAAI,CAACF,CAAC,CAACK,QAAF,IAAeL,CAAC,CAACE,OAAF,GAAY,EAAZ,IAAkBF,CAAC,CAACE,OAAF,GAAY,EAA9C,MAAuDF,CAAC,CAACE,OAAF,GAAY,EAAZ,IAAkBF,CAAC,CAACE,OAAF,GAAY,GAArF,CAAJ,EAA+F;AAC7FF,aAAC,CAACM,cAAF;AACD;AACF;AAxB8B;;AAAA;AAAA,OAAjC;;;;cAE2B;;;;AAEY,8DAApC,mEAAa,SAAb,EAAwB,CAAC,QAAD,CAAxB,CAAoC,G,8BAAA,E,WAAA,E,IAAA;AAJ1BC,wBAAoB,6DAHhC,gEAAU;AACTpB,cAAQ,EAAE;AADD,KAAV,CAGgC,GAApBoB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/Bb,QAAaC,qBAAqB;AAAA;AAAA;AAahC,qCAAoBC,GAApB,EAA4C;AAAA;;AAAxB,aAAAA,GAAA,GAAAA,GAAA;AAVpB,aAAAC,KAAA,GAAQ,IAAR;AAU+C;;AAbf;AAAA;AAAA,mCAerB,CACV;AAhB+B;AAAA;AAAA,0BAKdjD,KALc,EAKP;AACvB,cAAIA,KAAK,KAAK,KAAKkD,KAAnB,EAA0B;AACxB,iBAAKA,KAAL,GAAalD,KAAb;AACA,iBAAKiD,KAAL,GAAa,CAACjD,KAAd;AACA,iBAAKgD,GAAL,CAASG,aAAT;AACD;AACF;AAX+B;;AAAA;AAAA,OAAlC;;;;cAa2B;;;;AARhB,8DAAR,6DAAQ,G,+BAAA,E,MAAA,E,IAAA;AALEJ,yBAAqB,6DALjC,gEAAU;AACTrB,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,mIAFS;AAGTyB,qBAAe,EAAE,sEAAwBC;AAHhC,KAAV,CAKiC,GAArBN,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAaO,8BAA8B,GAEzC,wCAAmBC,GAAnB,EAA0C;AAAA;;AAAvB,WAAAA,GAAA,GAAAA,GAAA;AAA0B,KAF/C;;;;cAE0B;;;;AAFbD,kCAA8B,6DAH1C,gEAAU;AACT5B,cAAQ,EAAE;AADD,KAAV,CAG0C,GAA9B4B,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUb,QAAaE,sBAAsB;AAAA;AAAA;AAOjC,sCACUD,GADV,EAEUE,QAFV,EAGcC,qBAHd,EAI8BC,IAJ9B,EAKUC,UALV,EAKiC;AAAA;;AAJvB,aAAAL,GAAA,GAAAA,GAAA;AACA,aAAAE,QAAA,GAAAA,QAAA;AAEoB,aAAAE,IAAA,GAAAA,IAAA;AACpB,aAAAC,UAAA,GAAAA,UAAA;AAPD,aAAAC,YAAA,GAAe,EAAf;AAQP,aAAKC,SAAL,GAAiBJ,qBAAqB,GAAGA,qBAAqB,CAACH,GAAzB,GAA+BA,GAArE;AACA,aAAKQ,OAAL,GAAe,KAAKJ,IAAL,GAAY,KAAKA,IAAL,CAAUI,OAAtB,GAAgC,0CAA/C;AACD;;AAfgC;AAAA;AAAA,mCAiBtB;AAAA;;AACT,cAAI,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAaC,YAAjC,EAA+C;AAC7C,+DACE,KAAKD,OAAL,CAAaC,YADf,EAEE,KAAKF,OAFP,EAGE9E,SAHF,CAGY,UAACiF,CAAD,EAAO;AACjB,kBAAMC,aAAa,GAAG,MAAI,CAACH,OAAL,CAAaI,MAAnC;;AACA,kBAAID,aAAJ,EAAmB;AACjB,oBAAME,YAAY,GAAG,MAAI,CAACC,kBAAL,CAAwB,MAAI,CAACN,OAA7B,CAArB,CADiB,CAEjB;;;AACA,oBAAMO,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,aAAZ,EAA2B,CAA3B,CAAjB;AACA,oBAAMO,QAAQ,GAAG,iEAAoBL,YAApB,CAAjB;;AACA,oBAAIK,QAAQ,KAAKC,SAAb,IAA0BD,QAAQ,KAAK,IAAvC,IAA+CA,QAAQ,KAAK,EAAhE,EAAoE;AAClE,wBAAI,CAACE,QAAL,CAAcF,QAAQ,CAACH,QAAD,CAAtB;AACD;AACF,eARD,MAQO,IAAI,MAAI,CAACM,GAAT,EAAc;AACnB,sBAAI,CAACD,QAAL,CAAc,IAAd;AACD;AACF,aAhBD;AAiBD;AACF;AArCgC;AAAA;AAAA,2CAuCdE,CAvCc,EAuCI;AACnC,cAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,QAA3B;AACA,iBAAOT,MAAM,CAACC,IAAP,CAAYM,SAAZ,EAAuBG,IAAvB,CAA4B,UAAA7E,IAAI;AAAA,mBAAIyE,CAAC,KAAKC,SAAS,CAAC1E,IAAD,CAAnB;AAAA,WAAhC,KAA8D,IAArE;AACD;AA1CgC;AAAA;AAAA,iCAgDxB8E,IAhDwB,EAgDV;AACrB,cAAI,CAAC,KAAKN,GAAV,EAAe;AACb,gBAAMO,OAAO,GAAG,KAAK3B,QAAL,CAAc4B,uBAAd,CAAsC,4FAAtC,CAAhB;AACA,iBAAKR,GAAL,GAAW,KAAKf,SAAL,CAAewB,eAAf,CAA+BF,OAA/B,CAAX;AACD;;AAED,eAAKP,GAAL,CAASU,QAAT,CAAkBJ,IAAlB,GAAyBA,IAAzB;AACD;AAvDgC;AAAA;AAAA,sCAyDnB,CAAG;AAzDgB;AAAA;AAAA,4BA4CnB;AACZ,iBAAO,KAAKvB,UAAL,CAAgBI,OAAvB;AACD;AA9CgC;;AAAA;AAAA,OAAnC;;;;cAQiB;;cACK;;cACiB,iG;AAA8B;AAAA,gBAAhE;AAAgE;;cAC/B,0E;AAAmB;AAAA,gBAApD;AAAoD,WAA5C;AAAA,gBAAI;AAAJ,SAA4C;;cACjC;;;;AAPb,8DAAR,6DAAQ,G,gCAAA,E,cAAA,E,MAAA;AALER,0BAAsB,6DAHlC,gEAAU;AACT9B,cAAQ,EAAE;AADD,KAAV,CAGkC,EAU9B,0HAV8B,EAW9B,0HAX8B,EAWlB,sHAXkB,GAAtB8B,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPb,QAAagC,mBAAmB;AAAA;AAAA;AAE9B,mCAAoBC,IAApB,EAAuD;AAAA;;AAAA;;AAAnC,aAAAA,IAAA,GAAAA,IAAA;AAEpB,aAAA1B,OAAA,GAAU,uDAAU,KAAK2B,OAAf,EAAwB,QAAxB,EAAkCC,IAAlC,CAAuC,2DAAI,YAAM;AACzD,cAAI,MAAI,CAACD,OAAL,CAAaE,SAAb,CAAuBC,QAAvB,CAAgC,WAAhC,MAAiD,KAArD,EAA4D;AAC1D,kBAAI,CAACH,OAAL,CAAaE,SAAb,CAAuBE,GAAvB,CAA2B,WAA3B;AACD;AACF,SAJgD,CAAvC,EAIN,mEAAY,CAAZ,CAJM,CAAV;AAF0D;;AAF5B;AAAA;AAAA,4BAUhB;AACZ,iBAAO,KAAKL,IAAL,CAAUM,aAAjB;AACD;AAZ6B;;AAAA;AAAA,OAAhC;;;;cAE4B;;;;AAFfP,uBAAmB,6DAH/B,gEAAU;AACT9D,cAAQ,EAAE;AADD,KAAV,CAG+B,GAAnB8D,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRN,QAAMQ,mBAAmB,GAAG;AACjCC,gBAAU,EAAE;AACVlI,gBAAQ;AADE,OADqB;AAIjCmI,eAAS,EAAE;AACTnI,gBAAQ;AADC,OAJsB;AAOjCC,WAAK,EAAE;AACLD,gBAAQ,wBADH;AAELC,aAAK,8BAFA;AAGLmI,qBAAa;AAHR,OAP0B;AAYjCC,kBAAY,EAAE;AACZrI,gBAAQ,6BADI;AAEZsI,iBAAS,kCAFG;AAGZC,iBAAS;AAHG,OAZmB;AAiBjCC,cAAQ,EAAE;AACRxI,gBAAQ,2BADA;AAERyI,eAAO;AAFC,OAjBuB;AAqBjCC,sBAAgB,EAAE;AAChB1I,gBAAQ,mCADQ;AAEhB2I,wBAAgB;AAFA,OArBe;AA2BjCC,eAAS,EAAE;AACT5I,gBAAQ,sBADC;AAETuI,iBAAS,mBAFA;AAGTD,iBAAS;AAHA,OA3BsB;AAiCjCO,0BAAoB,EAAE;AACpB7I,gBAAQ,wBADY;AAEpB8I,WAAG,eAFiB;AAGpBC,WAAG;AAHiB;AAjCW,KAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6BP,QAAaC,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DArBhC,+DAAS;AACR9E,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,CADD;AAKRD,kBAAY,EAAE,CACZ,4FADY,EAEZ,2GAFY,EAGZ,0FAHY,EAIZ,oFAJY,CALN;AAWRgF,aAAO,EAAE,CACP,4FADO,EAEP,2GAFO,EAGP,0FAHO,EAIP,oFAJO,CAXD;AAiBRC,qBAAe,EAAE,CACf,4FADe;AAjBT,KAAT,CAqBgC,GAApBF,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,QAAaG,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,kCACtBlH,KADsB,EACVmH,IADU,EACA;AAC9B,cAAIhC,IAAI,GAAG,IAAX;;AACA,cAAInF,KAAJ,EAAW;AACT,oBAAQA,KAAK,CAACA,KAAd;AACE,mBAAK,CAAL;AACEmF,oBAAI,6DAAoDnF,KAAK,CAACW,KAA1D,aAAJ;AACA;;AACF,mBAAK,CAAL;AACEwE,oBAAI,6DAAoDnF,KAAK,CAACW,KAA1D,aAAJ;AACA;;AACF,mBAAK,CAAL;AACEwE,oBAAI,6DAAoDnF,KAAK,CAACW,KAA1D,aAAJ;AACA;;AACF,mBAAK,CAAL;AACEwE,oBAAI,4DAAmDnF,KAAK,CAACW,KAAzD,aAAJ;AACA;;AACF;AACEwE,oBAAI,GAAG,IAAP;AACA;AAfJ;;AAiBA,mBAAOA,IAAP;AACD;AACF;AAvB+B;;AAAA;AAAA,OAAlC;;AAAa+B,yBAAqB,6DAHjC,2DAAK;AACJ7G,UAAI,EAAE;AADF,KAAL,CAGiC,GAArB6G,qBAAqB,CAArB;;AA8Bb,QAAaE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,kCACVpH,KADU,EACEmH,IADF,EACY;AAC9B,iBAAOnH,KAAK,GAAGqH,UAAU,CAACrH,KAAD,CAAV,CAAkBsH,cAAlB,CAAiC3C,SAAjC,EAA4C;AAAE4C,iCAAqB,EAAE;AAAzB,WAA5C,CAAH,GAA+E,IAA3F,CAD8B,CAE9B;AACD;AAJmB;;AAAA;AAAA,OAAtB;;AAAaH,aAAS,6DAHrB,2DAAK;AACJ/G,UAAI,EAAE;AADF,KAAL,CAGqB,GAAT+G,SAAS,CAAT;;AAUb,QAAaI,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,kCACrBxH,KADqB,EACTmH,IADS,EACC;AAC9B,cAAIhC,IAAI,GAAG,IAAX;;AACA,cAAInF,KAAJ,EAAW;AACT,oBAAQA,KAAK,CAACA,KAAd;AACE,mBAAK,CAAL;AACEmF,oBAAI,GAAG,wDAAP;AACA;;AACF,mBAAK,CAAL;AACEA,oBAAI,GAAG,uDAAP;AACA;;AACF,mBAAK,CAAL;AACEA,oBAAI,GAAG,wDAAP;AACA;;AACF,mBAAK,CAAL;AACEA,oBAAI,GAAG,uDAAP;AACA;;AACF;AACEA,oBAAI,GAAG,IAAP;AACA;AAfJ;;AAiBA,mBAAOA,IAAP;AACD;AACF;AAvB8B;;AAAA;AAAA,OAAjC;;AAAaqC,wBAAoB,6DAHhC,2DAAK;AACJnH,UAAI,EAAE;AADF,KAAL,CAGgC,GAApBmH,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,QAAaC,YAAY;AAAA;AAAA,KAAzB;;AAAaA,gBAAY,6DAnBxB,+DAAS;AACRzF,kBAAY,EAAE,CACZ,2EADY,EAEZ,gFAFY,EAGZ,2DAHY,EAIZ,uEAJY,EAKZ,sEALY,CADN;AAQRC,aAAO,EAAE,CACP,4DADO,CARD;AAWR+E,aAAO,EAAE,CACP,2EADO,EAEP,2DAFO,EAGP,uEAHO,EAIP,sEAJO,EAKP,gFALO;AAXD,KAAT,CAmBwB,GAAZS,YAAY,CAAZ","file":"company-setting-edit-company-setting-edit-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h2 class=\\\"mr-auto\\\">{{PageTitle}}</h2>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n            <div class=\\\"card-body\\\">\\n              <div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-4\\\">\\n                    <div class=\\\"clearfix\\\">\\n                      <div class=\\\"fileinput text-center fileinput-new\\\" data-provides=\\\"fileinput\\\">\\n                        <div class=\\\"btn-file mt-3\\\">\\n                          <div class=\\\"thumbnail fileinput-new uploaded-user-image rounded-circle\\\"\\n                            style=\\\"width: 150px; height: 150px;\\\">\\n                            <img [src]=\\\"editImageUrl ? editImageUrl : 'assets/no_image.png'\\\" alt=\\\"\\\">\\n                          </div>\\n                          <div class=\\\"clearfix\\\"></div>\\n                          <button class=\\\"fileinput-new btn btn-dark btn-sm btn-file mt-3\\\"> Browse\\n                            Image\\n                          </button>\\n                          <input accept=\\\"image/x-png,image/jpeg\\\" (change)=\\\"fileChangeEvent($event)\\\" type=\\\"file\\\"\\n                            file-model=\\\"myFile\\\">\\n                          <div class=\\\"fileinput-preview fileinput-exists thumbnail uploaded-user-image rounded-circle\\\"\\n                            style=\\\"width: 150px; height: 150px;\\\"></div>\\n                        </div>\\n                        <div class=\\\"text-center\\\">\\n                          <a (click)=\\\"removeFile()\\\" class=\\\"btn btn-link btn-sm fileinput-exists mt-3\\\"\\n                            data-dismiss=\\\"fileinput\\\">Remove</a> </div>\\n                        <div class=\\\"clearfix mt-3\\\">\\n                          <p class=\\\"upload-img-label text-muted font-size-12\\\">*Recommended\\n                            Size:<br>Minimum\\n                            250 * 250</p>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-8\\\">\\n                    <div class=\\\"row\\\">\\n      \\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Name <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <input [formControl]=\\\"addForm.controls['company_name']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                              placeholder=\\\"\\\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Email <em>*</em></label>\\n                          \\n                          <div class=\\\"\\\" [ngClass]=\\\"{'has-error': formErrors.company_email}\\\">\\n                            <input [formControl]=\\\"addForm.controls['company_email']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                              placeholder=\\\"\\\">\\n                            <span *ngIf=\\\"formErrors.company_email\\\" class=\\\"help-block\\\"\\n                              [innerHTML]=\\\"formErrors.company_email\\\"></span>\\n                          </div>\\n      \\n                        </div>\\n                      </div>\\n      \\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Company Domain <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <input [formControl]=\\\"addForm.controls['company_domain']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                              placeholder=\\\"\\\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Company Subdomain <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <input [formControl]=\\\"addForm.controls['company_subdomain']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                              placeholder=\\\"\\\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Currency <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['currency']\\\"\\n                              [items]=\\\"currencyListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Currency\\\">\\n                            </ng-select>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Language <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['language']\\\" \\n                              [items]=\\\"languageListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Language\\\">\\n                            </ng-select>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Time Format <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['time_format']\\\"\\n                              [items]=\\\"timeFormatListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Time Format\\\">\\n                            </ng-select>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Timezone <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['timezone']\\\" \\n                              [items]=\\\"timezoneListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Timezone\\\">\\n                            </ng-select>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Date Format <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['date_format']\\\" \\n                              [items]=\\\"dateFormatListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Date Format\\\">\\n                            </ng-select>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Country <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['country_id']\\\" (change)=\\\"getCountryName($event)\\\"\\n                              [items]=\\\"countryListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Country\\\">\\n                            </ng-select>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">State <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <input [formControl]=\\\"addForm.controls['state']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">City <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <input [formControl]=\\\"addForm.controls['city']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label text-md-right\\\">Street Address <em>*</em></label>\\n                          <div class=\\\"\\\">\\n                            <input [formControl]=\\\"addForm.controls['street_address']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                              placeholder=\\\"\\\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                      \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label text-md-right\\\">Phone Number <em>*</em></label>\\n                      <div class=\\\"d-flex\\\">\\n                        <input number [formControl]=\\\"addForm.controls['dial_code']\\\" type=\\\"text\\\" class=\\\"form-control mr-2\\\"\\n                          style=\\\"width: 100px;\\\" placeholder=\\\"Dial code\\\">\\n                        <input number [formControl]=\\\"addForm.controls['phone_no']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                          placeholder=\\\"Enter phone number\\\">\\n                      </div>\\n                    </div>\\n                    <!-- <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label text-md-right\\\">Address</label>\\n                      <textarea [formControl]=\\\"addForm.controls['address']\\\" class=\\\"form-control\\\" rows=\\\"2\\\"></textarea>\\n                    </div> -->\\n                  </div>\\n                </div>\\n      \\n      \\n              </div>\\n            </div>\\n            <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-light\\\" routerLink=\\\"/setting\\\">Cancel</button>\\n              <button type=\\\"submit\\\" [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\" [disabled]=\\\"showLoader\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\n            </div>\\n          </form>\\n\\n    </div>\\n</div>\"","export default \"<p class=\\\"help is-danger\\\" [class.hide]=\\\"_hide\\\" [innerHTML]=\\\"_text\\\"></p>\"","declare var swal: any;\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonService } from 'src/app/service/common.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { CompanyService } from 'src/app/service/company.service';\n\n@Component({\n  selector: 'app-company-setting-edit',\n  templateUrl: './company-setting-edit.component.html'\n})\nexport class CompanySettingEditComponent implements OnInit {\n  PageTitle = \"Edit Setting\";\n  currentCompany: any;\n\n  selectedFile: File;\n  editImageUrl: any = null;\n  addNewRadio: boolean = false\n  timezoneListArray: Array<any> = [];\n  dateFormatListArray: Array<any> = [];\n  timeFormatListArray: Array<any> = [];\n  languageListArray: Array<any> = [];\n  currencyListArray: Array<any> = [];\n  countryListArray: Array<any> = [];\n  loadingState = false;\n  addForm: FormGroup;\n  showLoader = false;\n  formErrors = {\n    company_email: null,\n    apierror: null,\n  };\n  editId = null;\n\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private companyservice: CompanyService,\n    private dataservice: DataService,\n    private commonService: CommonService\n  ) {\n\n    this.addForm = this.fb.group({\n      company_name: [null, Validators.compose([Validators.required])],\n      company_email: [null, Validators.compose([Validators.required, Validators.email])],\n      phone_no: [null, Validators.compose([Validators.required])],\n      dial_code: ['+', Validators.compose([Validators.required])],\n      address: [null],\n      country_name: [null],\n      company_domain: [null, Validators.compose([Validators.required])],\n      company_subdomain: [null, Validators.compose([Validators.required])],\n      language: [null, Validators.compose([Validators.required])],\n      currency: [null, Validators.compose([Validators.required])],\n      time_format: [null, Validators.compose([Validators.required])],\n      timezone: [null, Validators.compose([Validators.required])],\n      date_format: [null, Validators.compose([Validators.required])],\n      country_id: [null, Validators.compose([Validators.required])],\n      state: [null, Validators.compose([Validators.required])],\n      city: [null, Validators.compose([Validators.required])],\n      street_address: [null, Validators.compose([Validators.required])],\n    });\n  }\n\n  ngOnInit() {\n    this.dataservice.currentCompany.subscribe((responce) => {\n      if (responce) {\n        this.currentCompany = responce;\n      }\n    })\n    this.getCountryList();\n    this.getMasterData();\n    this.getEditObject();\n  }\n  getMasterData() {\n    this.companyservice.getCompanyMasterData().subscribe((res: any) => {\n      if (res.success) {\n        this.timezoneListArray = res.data.timezone;\n        this.dateFormatListArray = res.data.date_format;\n        this.timeFormatListArray = res.data.time_format;\n        this.languageListArray = res.data.language;\n        this.currencyListArray = res.data.currency;\n      }\n    });\n  }\n  getCountryList() {\n    this.commonService.getCountryList().subscribe((res: any) => {\n      if (res.success) {\n        this.countryListArray = res.data.country_list;\n      }\n    });\n  }\n\n\n  getEditObject() {\n    this.dataservice.currentCompany.subscribe((response) => {\n      if (response) {\n        this.editId = response.company_id;\n        this.editImageUrl = response.company_logo,\n          this.addForm.patchValue({\n            company_name: response.company_name,\n            category_id: response.category_id,\n            dial_code: response.dial_code,\n            company_email: response.company_email,\n            time_format: response.time_format.value,\n            timezone: response.timezone.value,\n            date_format: response.date_format.value,\n            company_domain: response.company_domain,\n            company_subdomain: response.company_subdomain,\n            language: response.language.value,\n            phone_no: response.phone_no,\n            currency: response.currency.value,\n            country_name: response.address.country_name,\n            country_id: response.address.country_id,\n            state: response.address.state,\n            city: response.address.city,\n            street_address: response.address.street_address ? response.address.street_address : ''\n          });\n      }\n    });\n  }\n\n  fileChangeEvent(fileInput: any) {\n    const reg = /(.*?)\\.(jpg|jpeg|png|gif|giff)$/;\n    if (!fileInput.target.files[0].name.match(reg)) {\n\n      swal.fire(\n        'Invalid File!',\n        'Please select valid file ',\n        'error'\n      );\n      this.removeFile();\n      return false;\n    } else {\n      this.removeFile();\n      this.selectedFile = fileInput.target.files[0];\n    }\n  }\n\n  removeFile() {\n    this.selectedFile = null;\n  }\n  getCountryName(data) {\n    this.addForm.patchValue({ country_name: data.label });\n  }\n  submitForm(formData: any): void {\n    if (formData.valid) {\n      this.showLoader = true;\n      const data = new FormData();\n      data.append('company_name', formData.value.company_name);\n      data.append('company_email', formData.value.company_email);\n      data.append('phone_no', formData.value.phone_no);\n      data.append('company_domain', formData.value.company_domain);\n      data.append('company_subdomain', formData.value.company_subdomain);\n      data.append('dial_code', formData.value.dial_code);\n      data.append('language', formData.value.language);\n      data.append('currency', formData.value.currency);\n      data.append('time_format', formData.value.time_format);\n      data.append('timezone', formData.value.timezone);\n      data.append('date_format', formData.value.date_format);\n\n\n      let address = {\n        country_id: formData.value.country_id,\n        country_name: formData.value.country_name,\n        state: formData.value.state,\n        city: formData.value.city,\n        street_address: formData.value.street_address\n      }\n      data.append('address', JSON.stringify(address));\n\n      if (this.selectedFile) {\n        data.append('file', this.selectedFile);\n      }\n\n      this.companyservice.editCompany(this.editId, data).subscribe((response) => {\n        this.showLoader = false;\n        if (response.success) {\n          this.commonService.getProfile().subscribe((response) => {\n            if (response.success) {\n              this.dataservice.setAuth(response.data);\n              this.router.navigateByUrl('/setting');\n            }\n          });\n        } else {\n          response.error.map(obj => {\n            if (obj.hasOwnProperty('company_email')) {\n              this.formErrors['company_email'] = obj['company_email'];\n            } else {\n              this.formErrors['apierror'] = `* ${response.error}`;\n            }\n          });\n        }\n      }, (error) => {\n        this.showLoader = false;\n      });\n\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompanySettingEditComponent } from './company-setting-edit.component';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CompanyService } from 'src/app/service/company.service';\n\nexport const routes: Routes = [\n  {\n    path: '', component: CompanySettingEditComponent\n  }\n]\n\n@NgModule({\n  declarations: [CompanySettingEditComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormValidationModule,\n    NgSelectModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ], providers: [CompanyService]\n})\nexport class CompanySettingEditModule { }\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[number]'\r\n})\r\nexport class NumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\r\n    const e = <KeyboardEvent>event;\r\n    if ([46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 ||\r\n      // Allow: Ctrl+A\r\n      (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n      // Allow: Ctrl+C\r\n      // (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n      // Allow: Ctrl+V\r\n      // (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n      // Allow: Ctrl+X\r\n      (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\r\n      // Allow: home, end, left, right\r\n      (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n      // let it happen, don't do anything\r\n      return;\r\n    }\r\n    // Ensure that it is a number and stop the keypress\r\n    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105 ||\r\n      (e.keyCode === 110) || (e.keyCode === 190))) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n@Directive({\r\n  selector: '[floatNumber]'\r\n})\r\nexport class FloatNumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\r\n    const e = <KeyboardEvent>event;\r\n    if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\r\n      // Allow: Ctrl+A\r\n      (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n      // Allow: Ctrl+C\r\n      // (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n      // Allow: Ctrl+V\r\n      // (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n      // Allow: Ctrl+X\r\n      (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\r\n      // Allow: home, end, left, right\r\n      (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n      // let it happen, don't do anything\r\n      return;\r\n    }\r\n    // Ensure that it is a number and stop the keypress\r\n    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-control-error',\r\n  templateUrl: './control-error.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ControlErrorComponent implements OnInit {\r\n\r\n  _text;\r\n  _hide = true;\r\n\r\n  @Input() set text(value) {\r\n    if (value !== this._text) {\r\n      this._text = value;\r\n      this._hide = !value;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[controlErrorContainer]'\r\n})\r\nexport class ControlErrorContainerDirective {\r\n\r\n  constructor(public vcr: ViewContainerRef) { }\r\n\r\n}\r\n","import {\r\n  Directive, Optional, ViewContainerRef, ComponentFactoryResolver,\r\n  ComponentRef, Input, Host, OnInit, OnDestroy\r\n} from '@angular/core';\r\nimport { NgControl, AbstractControl } from '@angular/forms';\r\nimport { ControlErrorComponent } from '../control-error/control-error.component';\r\nimport { ControlErrorContainerDirective } from './control-error-container.directive';\r\nimport { FormSubmitDirective } from './form-submit.directive';\r\nimport { merge, EMPTY, Observable } from 'rxjs';\r\nimport { VALIDATION_MESSAGES } from '../form-errors';\r\n\r\n\r\n@Directive({\r\n  selector: '[formControl], [formControlName]'\r\n})\r\nexport class ControlErrorsDirective implements OnInit, OnDestroy {\r\n\r\n  ref: ComponentRef<ControlErrorComponent>;\r\n  container: ViewContainerRef;\r\n  submit$: Observable<Event>;\r\n  @Input() customErrors = {};\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private resolver: ComponentFactoryResolver,\r\n    @Optional() controlErrorContainer: ControlErrorContainerDirective,\r\n    @Optional() @Host() private form: FormSubmitDirective,\r\n    private controlDir: NgControl) {\r\n    this.container = controlErrorContainer ? controlErrorContainer.vcr : vcr;\r\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control && this.control.valueChanges) {\r\n      merge(\r\n        this.control.valueChanges,\r\n        this.submit$\r\n      ).subscribe((v) => {\r\n        const controlErrors = this.control.errors;\r\n        if (controlErrors) {\r\n          const control_name = this.getFormControlName(this.control);\r\n          // console.log(control_name, controlErrors);\r\n          const firstKey = Object.keys(controlErrors)[0];\r\n          const messages = VALIDATION_MESSAGES[control_name];\r\n          if (messages !== undefined && messages !== null && messages !== '') {\r\n            this.setError(messages[firstKey]);\r\n          }\r\n        } else if (this.ref) {\r\n          this.setError(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getFormControlName(c: AbstractControl): string | null {\r\n    const formGroup = c.parent.controls;\r\n    return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\r\n  }\r\n\r\n  get control() {\r\n    return this.controlDir.control;\r\n  }\r\n\r\n  setError(text: string) {\r\n    if (!this.ref) {\r\n      const factory = this.resolver.resolveComponentFactory(ControlErrorComponent);\r\n      this.ref = this.container.createComponent(factory);\r\n    }\r\n\r\n    this.ref.instance.text = text;\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n  selector: 'form'\r\n})\r\nexport class FormSubmitDirective {\r\n\r\n  constructor(private host: ElementRef<HTMLFormElement>) { }\r\n\r\n  submit$ = fromEvent(this.element, 'submit').pipe(tap(() => {\r\n    if (this.element.classList.contains('submitted') === false) {\r\n      this.element.classList.add('submitted');\r\n    }\r\n  }), shareReplay(1));\r\n\r\n  get element() {\r\n    return this.host.nativeElement;\r\n  }\r\n\r\n}\r\n","export const VALIDATION_MESSAGES = {\r\n  first_name: {\r\n    required: `* Please enter first name`,\r\n  },\r\n  last_name: {\r\n    required: `* Please enter last name`,\r\n  },\r\n  email: {\r\n    required: `* Please enter email`,\r\n    email: `* Please enter valid email`,\r\n    validateEmail: `* Please enter valid email`,\r\n  },\r\n  phone_number: {\r\n    required: `Please enter phone number`,\r\n    minlength: `Please enter at least 8 digits`,\r\n    maxlength: `Please enter at least 18 digits`\r\n  },\r\n  password: {\r\n    required: `* Please enter password`,\r\n    pattern: `* Password must contains at least 6 characters`,\r\n  },\r\n  confirm_password: {\r\n    required: `* Please enter confirm password`,\r\n    validatePassword: `* Your Password is not matched`,\r\n  },\r\n\r\n \r\n  login_pin: {\r\n    required: `* Please enter PIN`,\r\n    maxlength: `Pin Max 4 Digit`,\r\n    minlength: `Please enter at least 4 digits`,\r\n  },\r\n \r\n  number_tag_to_create: {\r\n    required: `* Please enter vlaue`,\r\n    max: `Maximum 100`,\r\n    min:` Minimum 1`\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormSubmitDirective } from './directive/form-submit.directive';\r\nimport { ControlErrorsDirective } from './directive/control-errors.directive';\r\nimport { ControlErrorContainerDirective } from './directive/control-error-container.directive';\r\nimport { ControlErrorComponent } from './control-error/control-error.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  exports: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  entryComponents: [\r\n    ControlErrorComponent\r\n  ]\r\n})\r\nexport class FormValidationModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n\r\n@Pipe({\r\n  name: 'transactionStatus'\r\n})\r\nexport class TransactionStatusPipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    let text = null;\r\n    if (value) {\r\n      switch (value.value) {\r\n        case 1:\r\n          text = `<small class=\"badge badge-pill badge-default\">${value.label}</small>`;\r\n          break;\r\n        case 2:\r\n          text = `<small class=\"badge badge-pill badge-primary\">${value.label}</small>`;\r\n          break;\r\n        case 3:\r\n          text = `<small class=\"badge badge-pill badge-success\">${value.label}</small>`;\r\n          break;\r\n        case 4:\r\n          text = `<small class=\"badge badge-pill badge-danger\">${value.label}</small>`;\r\n          break;\r\n        default:\r\n          text = null;\r\n          break;\r\n      }\r\n      return text;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@Pipe({\r\n  name: 'price'\r\n})\r\nexport class PricePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    return value ? parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2 }) : '00';\r\n    // return parseFloat(value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  }\r\n}\r\n\r\n@Pipe({\r\n  name: 'transactionIcons'\r\n})\r\nexport class TransactionIconsPipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    let text = null;\r\n    if (value) {\r\n      switch (value.value) {\r\n        case 1:\r\n          text = '<span class=\"la la-check-circle text-success\"> </span>';\r\n          break;\r\n        case 2:\r\n          text = '<span class=\"la la-times-circle text-danger\"> </span>';\r\n          break;\r\n        case 3:\r\n          text = '<span class=\"la la-check-circle text-success\"> </span>';\r\n          break;\r\n        case 4:\r\n          text = '<span class=\"la la-times-circle text-danger\"> </span>';\r\n          break;\r\n        default:\r\n          text = null;\r\n          break;\r\n      }\r\n      return text;\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumberDirective, FloatNumberDirective } from './directive/number.directive';\r\nimport { PricePipe, TransactionStatusPipe, TransactionIconsPipe } from './pipe/status.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NumberDirective,\r\n    FloatNumberDirective,\r\n    PricePipe,\r\n    TransactionStatusPipe,\r\n    TransactionIconsPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    NumberDirective,\r\n    PricePipe,\r\n    TransactionStatusPipe,\r\n    TransactionIconsPipe,\r\n    FloatNumberDirective\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n"]}