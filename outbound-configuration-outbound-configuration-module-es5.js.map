{"version":3,"sources":["webpack:///src/app/pages/master/outbound-configuration/outbound-configuration-edit/outbound-configuration-edit.component.html","webpack:///src/app/pages/master/outbound-configuration/outbound-configuration.component.html","webpack:///src/app/pages/master/outbound-configuration/outbound-configuration-edit/outbound-configuration-edit.component.ts","webpack:///src/app/pages/master/outbound-configuration/outbound-configuration.component.ts","webpack:///src/app/pages/master/outbound-configuration/outbound-configuration.module.ts","webpack:///src/app/service/outbound-configuration.service.ts"],"names":["OutboundConfigurationEditComponent","router","activatedRoute","fb","outboundConfigurationService","PageTitle","loadingState","pickingTypeListArray","showLoader","formErrors","picking_type","apierror","isEditing","editId","addForm","group","compose","required","snapshot","paramMap","get","getMasterData","getEditObject","getOutboundConfigurationMasterData","subscribe","res","success","data","getOutboundConfigurationByCompanyId","response","patchValue","value","navigateByUrl","formData","removeError","valid","FormData","append","editOutboundConfiguration","error","map","obj","hasOwnProperty","addOutboundConfiguration","selector","template","OutboundConfigurationComponent","dataService","is_edit","is_add","currentCompany","company_id","getData","objectDetails","routes","path","component","title","OutboundConfigurationModule","declarations","imports","forChild","providers","OutboundConfigurationService","http","API_URL","APIEndpoint","post","id","put","param","params"],"mappings":"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","file":"outbound-configuration-outbound-configuration-module-es5.js","sourcesContent":["export default \"<div class=\\\"side-container\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h2 class=\\\"mr-auto\\\">{{ isEditing ? 'Update' : 'Create' }} {{PageTitle}}</h2>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n            <div class=\\\"card-body\\\">\\n                <div>\\n\\n                    <div class=\\\"form-group row align-items-center\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3 mb-0\\\">Picking Type\\n                            <em>*</em></label>\\n                        <div class=\\\"col-md-5\\\" [ngClass]=\\\"{'has-error': formErrors.picking_type}\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['picking_type']\\\" [items]=\\\"pickingTypeListArray\\\"\\n                                bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Type\\\">\\n                            </ng-select>\\n                            <span *ngIf=\\\"formErrors.picking_type\\\" class=\\\"help-block\\\"\\n                                [innerHTML]=\\\"formErrors.picking_type\\\"></span>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n            <div class=\\\"text-right border-top pt-4 mt-5 card-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" routerLink=\\\"/manage/outbound-configuration\\\">Cancel</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\"\\n                    [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\"\\n                    [disabled]=\\\"showLoader\\\">Submit</button>\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"side-container\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row m-0\\\">\\n            <h2 class=\\\"mr-auto\\\">Outbound Configuration</h2>\\n            <div class=\\\"ml-3\\\">\\n            </div>\\n            <div class=\\\"ml-3\\\">\\n                <button *ngIf=\\\"is_add\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['add']\\\">Add</button>\\n                <button *ngIf=\\\"is_edit\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['edit',company_id]\\\">Update</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"tab-pane fade show active\\\" id=\\\"details\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"details-tab\\\">\\n                <div class=\\\"row mt-4\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <label class=\\\"text-muted mb-1 font-weight-bold\\\">Picking Type</label>\\n                        <div>{{objectDetails?.picking_type?.label}}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OutboundConfigurationService } from 'src/app/service/outbound-configuration.service';\n\n\n@Component({\n  selector: 'app-outbound-configuration-edit',\n  templateUrl: './outbound-configuration-edit.component.html',\n})\nexport class OutboundConfigurationEditComponent implements OnInit {\n  PageTitle = \"Outbound Configuration\"\n  loadingState = false;\n  addForm: FormGroup;\n  pickingTypeListArray: any = [];\n  showLoader = false;\n  formErrors = {\n    picking_type: null,\n    apierror: null,\n  };\n  isEditing = false;\n  editId = null;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private outboundConfigurationService: OutboundConfigurationService,\n  ) {\n    this.addForm = this.fb.group({\n      picking_type: [null, Validators.compose([Validators.required])],\n    });\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\n      this.isEditing = true;\n      this.editId = this.activatedRoute.snapshot.paramMap.get('id');\n    }\n  }\n\n  ngOnInit() {\n    this.getMasterData();\n    if (this.isEditing) {\n      this.getEditObject()\n    }\n  }\n  getMasterData() {\n    this.outboundConfigurationService.getOutboundConfigurationMasterData().subscribe((res) => {\n      if (res.success) {\n        this.pickingTypeListArray = res.data.picking_type ? res.data.picking_type : [];\n      }\n    });\n  }\n\n\n\n  getEditObject() {\n    this.outboundConfigurationService.getOutboundConfigurationByCompanyId(this.editId).subscribe((response) => {\n      if (response.success) {\n        this.addForm.patchValue({ picking_type: response.data.picking_type.value });\n      } else {\n        this.router.navigateByUrl('/manage/outbound-configuration');\n      }\n    });\n  }\n\n  submitForm(formData: any): void {\n    this.removeError();\n    if (formData.valid) {\n      this.showLoader = true;\n      const data = new FormData();\n      data.append('picking_type', formData.value.picking_type);\n      if (this.isEditing) {\n        this.outboundConfigurationService.editOutboundConfiguration(this.editId, data).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.router.navigateByUrl('/manage/outbound-configuration');\n          } else {\n            response.error.map(obj => {\n              if (obj.hasOwnProperty('number_tag_to_create')) {\n                this.formErrors['number_tag_to_create'] = obj['number_tag_to_create'];\n              }\n              else if (obj.hasOwnProperty('picking_type')) {\n                this.formErrors['picking_type'] = obj['picking_type'];\n              } else {\n                this.formErrors['apierror'] = `* ${response.error}`;\n              }\n            });\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      } else {\n        this.outboundConfigurationService.addOutboundConfiguration(data).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.router.navigateByUrl('/manage/outbound-configuration');\n          } else {\n            response.error.map(obj => {\n              if (obj.hasOwnProperty('number_tag_to_create')) {\n                this.formErrors['number_tag_to_create'] = obj['number_tag_to_create'];\n              }\n              else if (obj.hasOwnProperty('picking_type')) {\n                this.formErrors['picking_type'] = obj['picking_type'];\n              } else {\n                this.formErrors['apierror'] = `* ${response.error}`;\n              }\n            });\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      }\n    }\n  }\n  removeError() {\n    this.formErrors = {\n      picking_type: null,\n      apierror: null,\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OutboundConfigurationService } from 'src/app/service/outbound-configuration.service';\nimport { DataService } from 'src/app/service/data.service';\n\n@Component({\n  selector: 'app-outbound-configuration',\n  templateUrl: './outbound-configuration.component.html',\n})\nexport class OutboundConfigurationComponent implements OnInit {\n  currentCompany: any;\n  company_id\n  objectDetails: any;\n  is_edit: boolean = false;\n  is_add: boolean = false;\n\n  constructor(\n    private dataService: DataService,\n    private outboundConfigurationService: OutboundConfigurationService\n  ) {\n    this.dataService.currentCompany.subscribe((res: any) => {\n      if (res && res.company_id) {\n        this.currentCompany = res;\n        this.company_id = res.company_id;\n        this.getData();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  getData() {\n    this.outboundConfigurationService.getOutboundConfigurationByCompanyId(this.company_id).subscribe((res) => {\n      if (res.success) {\n        this.objectDetails = res.data;\n        this.is_edit = true;\n      } else {\n        this.is_add = true;\n      }\n\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutboundConfigurationEditComponent } from './outbound-configuration-edit/outbound-configuration-edit.component';\nimport { OutboundConfigurationComponent } from './outbound-configuration.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OutboundConfigurationService } from 'src/app/service/outbound-configuration.service';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OutboundConfigurationComponent,\n    data: { title: 'view_outbound_configuration' }\n  },\n  {\n    path: 'edit/:id',\n    component: OutboundConfigurationEditComponent,\n    data: { title: 'edit_outbound_configuration' }\n  },\n  {\n    path: \"add\",\n    component: OutboundConfigurationEditComponent,\n    data: { title: 'add_outbound_configuration' }\n  }\n]\n\n\n@NgModule({\n  declarations: [OutboundConfigurationEditComponent, OutboundConfigurationComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    FormValidationModule,\n    SharedModule,\n    NgSelectModule,\n    RouterModule.forChild(routes),\n  ], providers: [OutboundConfigurationService]\n})\nexport class OutboundConfigurationModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class OutboundConfigurationService {\n\n  API_URL: string = environment.APIEndpoint;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n\n  addOutboundConfiguration(data): Observable<any> {\n    return this.http.post(`${this.API_URL}/outbound_config`, data);\n  }\n\n  editOutboundConfiguration(id, data): Observable<any> {\n    return this.http.put(`${this.API_URL}/outbound_config/${id}`, data);\n  }\n\n  getOutboundConfigurationByCompanyId(id, param = null): Observable<any> {\n    return this.http.get(`${this.API_URL}/outbound_config/${id}`, { params: param });\n  }\n\n  getOutboundConfigurationMasterData(): Observable<any> {\n    return this.http.get(`${this.API_URL}/outbound_config/master-data`);\n  }\n\n}\n"]}