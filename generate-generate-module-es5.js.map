{"version":3,"sources":["webpack:///src/app/pages/inbound/unload/generate/generate.component.html","webpack:///src/app/pages/outbound/pick-list/generate/generate.component.html","webpack:///src/app/pages/inbound/unload/generate/generate.component.ts","webpack:///src/app/pages/inbound/unload/generate/generate.module.ts","webpack:///src/app/pages/outbound/pick-list/generate/generate.component.ts","webpack:///src/app/pages/outbound/pick-list/generate/generate.module.ts"],"names":["GenerateComponent","location","toastr","unloadService","paginationService","activatedRoute","dataService","fb","router","PageTitle","objectDetails","productList","productItems","headerData","date_format","showLoader","formErrors","apierror","exampleOptions","defaultDate","Date","dateFormat","snapshot","paramMap","get","orderId","getUnloadGenerateListById","addForm","group","receipt_date","compose","required","po_date","currentCompany","subscribe","response","timezone","String","format","time_format","label","patchValue","setHeaderData","push","class","key","back","success","data","po_detail","product_list","setData","pagination","searchText","po_no","formData","valid","FormData","append","changedateFormate","value","supplier_id","client_id","JSON","stringify","isEditing","addUnloadGenerate","setTimeout","error","filter","hasOwnProperty","page","currentPage","console","log","length","obj","object","Object","product_id","order_quantity","sku_no","product_name","selector","template","routes","path","component","GenerateModule","declarations","imports","forChild","picklistService","id","editId","pick_list_date","sales_order_date","getPickListGenerateListById","sales_order_detail","sales_order_no","changedateTimeFormate","addPickListGenerate","qty"],"mappings":"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","file":"generate-generate-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h2 class=\\\"mr-auto\\\">{{PageTitle}} {{objectDetails?.po_no}}</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"control-label text-md-right col-md-3 mt-2\\\">Order Number <em>*</em></label>\\r\\n        <div class=\\\"d-flex\\\">\\r\\n          <input [(ngModel)]=\\\"searchText\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"searchObject()\\\" class=\\\"btn btn-primary ml-2\\\">Search</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n        <div *ngIf=\\\"objectDetails\\\" class=\\\"row mt-3\\\">\\r\\n          <div class=\\\"col-7 pl-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label text-md-right\\\">PO Date <em>*</em></label>\\r\\n                  <div class=\\\"\\\">\\r\\n                    \\r\\n                    <input  value=\\\"{{addForm.value.po_date|date:date_format :timezone}}\\\" type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\" placeholder=\\\"\\\" disabled>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label text-md-right\\\">Date of Receipt</label>\\r\\n                  <div class=\\\"date-picker\\\">\\r\\n                    <ng2-flatpickr [formControl]=\\\"addForm.controls['receipt_date']\\\" [config]=\\\"exampleOptions\\\">\\r\\n                    </ng2-flatpickr>\\r\\n                    <span class=\\\"date-picker-icon\\\">\\r\\n                      <span class=\\\"fa fa-calendar\\\"></span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"row mt-4\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <h5>Product</h5>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <ng-container *ngIf=\\\"productList.length>0\\\">\\r\\n            <div class=\\\"row mt-3\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <!-- <div class=\\\"table-responsive-md\\\">\\r\\n                  <table class=\\\"table\\\">\\r\\n                    <thead class=\\\"thead-dark\\\">\\r\\n                      <tr>\\r\\n                        <th class=\\\"align-items-center d-flex\\\">\\r\\n                          <div class=\\\"form-check form-check-inline mr-0\\\">\\r\\n                            <div class=\\\"checkbox-container\\\">\\r\\n                              <input id=\\\"checkBoxAll\\\" (change)=\\\"markAllProduct($event.target.checked)\\\"\\r\\n                                class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"all\\\">\\r\\n                              <span class=\\\"checkmark\\\"></span>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </th>\\r\\n                        <th>SKU</th>\\r\\n                        <th>Product</th>\\r\\n                        <th class=\\\"text-center\\\">Order Quantity</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of productList; let i=index\\\">\\r\\n                        <td class=\\\"align-items-center d-flex\\\">\\r\\n                          <div class=\\\"form-check form-check-inline mr-0\\\">\\r\\n                            <div class=\\\"checkbox-container\\\">\\r\\n                              <input id=\\\"checkBox{{i}}\\\" (change)=\\\"addProduct(item, $event.target.checked)\\\"\\r\\n                                class=\\\"form-check-input pro-chk\\\" type=\\\"checkbox\\\" value=\\\"all\\\">\\r\\n                              <span class=\\\"checkmark\\\"></span>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </td>\\r\\n  \\r\\n                        <td>{{item?.sku_no}}</td>\\r\\n                        <td>{{item?.product_name}}</td>\\r\\n                        <td class=\\\"text-center\\\">{{item?.order_quantity |number}}</td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div> -->\\r\\n\\r\\n                <app-table-list (checkBoxSelectEvent)=\\\"checkBoxSelectEvent($event)\\\" [headerData]=\\\"headerData\\\"\\r\\n                  [rawData]=\\\"productList\\\" (reloadEvent)=\\\"onReloadEvent()\\\">\\r\\n                </app-table-list>\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"text-right border-top pt-4 mt-5 mb-3\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n                <button type=\\\"submit\\\" [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\"\\r\\n                  [disabled]=\\\"showLoader\\\" class=\\\"btn btn-secondary ml-2\\\">Generate</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h2 class=\\\"mr-auto\\\">{{PageTitle}}</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"control-label text-md-right col-md-3\\\">Order Number <em>*</em></label>\\r\\n        <div class=\\\"d-flex\\\">\\r\\n          <input [(ngModel)]=\\\"searchText\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"searchObject()\\\" class=\\\"btn btn-primary ml-2\\\">Search</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n        <div *ngIf=\\\"objectDetails\\\" class=\\\"row mt-3\\\">\\r\\n          <div class=\\\"col-7 pl-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label text-md-right\\\">\\r\\n                    Sales Order Date <em>*</em></label>\\r\\n                  <div class=\\\"\\\">\\r\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"objectDetails?.sales_order_date |date:date_format :timezone\\\"\\r\\n                      disabled>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label text-md-right\\\">Date of Receipt</label>\\r\\n                  <div class=\\\"date-picker\\\">\\r\\n                    <ng2-flatpickr [formControl]=\\\"addForm.controls['pick_list_date']\\\" [config]=\\\"exampleOptions\\\">\\r\\n                    </ng2-flatpickr>\\r\\n                    <span class=\\\"date-picker-icon\\\">\\r\\n                      <span class=\\\"fa fa-calendar\\\"></span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"row mt-4\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <h5>Product</h5>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <ng-container *ngIf=\\\"productList.length>0\\\">\\r\\n            <div class=\\\"row mt-3\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <!-- <div class=\\\"table-responsive-md\\\">\\r\\n                  <table class=\\\"table\\\">\\r\\n                    <thead class=\\\"thead-dark\\\">\\r\\n                      <tr>\\r\\n                        <th class=\\\"align-items-center d-flex\\\">\\r\\n                          <div class=\\\"form-check form-check-inline mr-0\\\">\\r\\n                            <div class=\\\"checkbox-container\\\">\\r\\n                              <input id=\\\"checkBoxAll\\\" (change)=\\\"markAllProduct($event.target.checked)\\\"\\r\\n                                class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"all\\\">\\r\\n                              <span class=\\\"checkmark\\\"></span>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </th>\\r\\n                        <th>SKU</th>\\r\\n                        <th>Product</th>\\r\\n                        <th class=\\\"text-center\\\">Order Quantity</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of productList; let i=index\\\">\\r\\n                        <td class=\\\"align-items-center d-flex\\\">\\r\\n                          <div class=\\\"form-check form-check-inline mr-0\\\">\\r\\n                            <div class=\\\"checkbox-container\\\">\\r\\n                              <input id=\\\"checkBox{{i}}\\\" (change)=\\\"addProduct(item, $event.target.checked)\\\"\\r\\n                                class=\\\"form-check-input pro-chk\\\" type=\\\"checkbox\\\" value=\\\"all\\\">\\r\\n                              <span class=\\\"checkmark\\\"></span>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </td>\\r\\n  \\r\\n                        <td>{{item?.sku_no}}</td>\\r\\n                        <td>{{item?.product_name}}</td>\\r\\n                        <td class=\\\"text-center\\\">{{item?.order_quantity |number}}</td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div> -->\\r\\n\\r\\n                <app-table-list (checkBoxSelectEvent)=\\\"checkBoxSelectEvent($event)\\\" [headerData]=\\\"headerData\\\"\\r\\n                  [rawData]=\\\"productList\\\" (reloadEvent)=\\\"onReloadEvent()\\\">\\r\\n                </app-table-list>\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"text-right border-top pt-4 mt-5 mb-3\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n                <button type=\\\"submit\\\" [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\"\\r\\n                  [disabled]=\\\"showLoader\\\" class=\\\"btn btn-secondary ml-2\\\">Generate</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FlatpickrOptions } from 'ng2-flatpickr';\r\nimport { Location } from '@angular/common';\r\nimport { UnloadService } from 'src/app/service/unload.service';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { CommonFunction } from 'src/app/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActionField, TextField, CheckBoxFildes } from 'src/app/common-module/table-list/list-field-type';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { DATEFORMAT } from 'src/app/messages';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-generate',\r\n  templateUrl: './generate.component.html'\r\n})\r\nexport class GenerateComponent implements OnInit {\r\n\r\n  PageTitle = \"Genrate Unloading\";\r\n  objectDetails: any = false;\r\n  productList: any = [];\r\n  productItems: Array<any> = [];\r\n  headerData: Array<any> = [];\r\n  pagination: any;\r\n  searchText: any;\r\n  currentPage: any;\r\n  orderId: any;\r\n  currentCompany:any;\r\n  date_format:string=\"M/d/yy\";\r\n  timezone:string\r\n  time_format:string;\r\n\r\n  addForm: FormGroup;\r\n  showLoader = false;\r\n  formErrors = {\r\n    apierror: null,\r\n  };\r\n  isEditing: any;\r\n  editId: any;\r\n\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private toastr: ToastrService,\r\n    private unloadService: UnloadService,\r\n    private paginationService: PaginationService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dataService:DataService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n  ) {\r\n\r\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\r\n      this.orderId = this.activatedRoute.snapshot.paramMap.get('id');\r\n      if (this.orderId) {\r\n        this.getUnloadGenerateListById();\r\n      }\r\n    }\r\n\r\n    this.addForm = this.fb.group({\r\n      receipt_date: [null, Validators.compose([Validators.required])],\r\n      po_date: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  exampleOptions: FlatpickrOptions = {\r\n    defaultDate: new Date(),\r\n    dateFormat\t:DATEFORMAT\r\n    //enableTime: true\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.dataService.currentCompany.subscribe((response)=>{\r\n      if(response){\r\n      this.timezone=String(response.timezone.format);;\r\n      this.time_format=response.time_format.label;\r\n      this.date_format=response.date_format.label;\r\n      this.currentCompany=response;\r\n      }\r\n      \r\n    });\r\n    this.addForm.patchValue({ receipt_date: new Date() });\r\n    this.setHeaderData();\r\n  }\r\n\r\n  setHeaderData() {\r\n    this.headerData.push(\r\n\r\n      new CheckBoxFildes({\r\n        class: 'align-items-center d-flex',\r\n        key: \"product_id\",\r\n      }),\r\n\r\n      new TextField({\r\n        label: \"SKU\",\r\n        key: \"sku_no\",\r\n      }),\r\n      new TextField({\r\n        label: \"Product\",\r\n        key: \"product_name\",\r\n      }),\r\n      new TextField({\r\n        label: \"Order Quantity\",\r\n        key: \"order_quantity\",\r\n      }) ,\r\n\r\n\r\n\r\n    );\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n    // this.router.navigateByUrl(`/inbound/order/view/${this.orderId}/unloading`);\r\n  }\r\n\r\n  getUnloadGenerateListById() {\r\n    this.unloadService.getUnloadGenerateListById(this.orderId).subscribe((response) => {\r\n      if (response.success) {\r\n        this.objectDetails = response.data.po_detail ? response.data.po_detail : {};\r\n        this.productList = response.data.product_list ? response.data.product_list : [];\r\n        this.setData();\r\n        // this.pagination = this.paginationService.getPager(response.data.pagination['total_page'], this.currentPage);\r\n      } else {\r\n        this.objectDetails = null;\r\n        this.productList = [];\r\n        this.pagination = null;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  setData() {\r\n    this.searchText = this.objectDetails.po_no;\r\n    this.addForm.patchValue({\r\n      po_date: this.objectDetails.po_date,\r\n      receipt_date: new Date()\r\n    });\r\n  }\r\n\r\n  submitForm(formData: any): void {\r\n    if (formData.valid) {\r\n      this.showLoader = true;\r\n      const data = new FormData();\r\n      data.append('receipt_date', CommonFunction.changedateFormate(formData.value.receipt_date[0]));\r\n      data.append('po_id', this.orderId);\r\n      data.append('supplier_id', this.objectDetails.supplier_id);\r\n      data.append('to_details', this.objectDetails.client_id);\r\n      data.append('product', JSON.stringify(this.productItems));\r\n      if (this.isEditing) {\r\n        // this.unloadService.editUnload(this.editId, data).subscribe((response) => {\r\n        //   this.showLoader = false;\r\n        //   if (response.success) {\r\n        //     this.router.navigateByUrl('/inbound/unload/');\r\n        //   }\r\n        // }, (error) => {\r\n        //   this.showLoader = false;\r\n        // });\r\n      } else {\r\n        this.unloadService.addUnloadGenerate(data).subscribe((response) => {\r\n          setTimeout(() => {\r\n            this.showLoader = false;\r\n          }, 700);\r\n          if (response.success) {\r\n            // this.router.navigateByUrl(`/inbound/order/view/${this.orderId}`);\r\n            this.back();\r\n          } else {\r\n            response.error.filter((data) => {\r\n              if (data.hasOwnProperty('product')) {\r\n                this.toastr.error('', 'Please Select a Product...!');\r\n              }\r\n            });\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // markAllProduct(checked) {\r\n  //   if (checked) {\r\n  //     this.productItems = this.productList.map((obj, index) => {\r\n  //       const object = new Object();\r\n  //       object['product_id'] = obj.product_id;\r\n  //       object['order_qty'] = obj.order_quantity;\r\n  //       object['sku_no'] = obj.sku_no;\r\n  //       object['product_name'] = obj.product_name;\r\n  //       $('.pro-chk').prop('checked', true);\r\n  //       return object;\r\n  //     });\r\n  //   } else {\r\n  //     $('.pro-chk').prop('checked', false);\r\n  //     this.productItems = [];\r\n  //   }\r\n  // }\r\n\r\n  // addProduct(obj, checked) {\r\n  //   if (checked) {\r\n  //     const object = new Object();\r\n  //     object['product_id'] = obj.product_id;\r\n  //     object['order_qty'] = obj.order_quantity;\r\n  //     object['sku_no'] = obj.sku_no;\r\n  //     object['product_name'] = obj.product_name;\r\n  //     this.productItems.push(object);\r\n  //     if (this.productItems.length === this.productItems.length) {\r\n  //       $('#checkBoxAll').prop('checked', true);\r\n  //     }\r\n  //   } else {\r\n  //     $('#checkBoxAll').prop('checked', false);\r\n  //     this.productItems = this.productItems.filter((object) => {\r\n  //       return String(object.product_id) !== String(obj.product_id);\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  getPage(page: number) {\r\n    this.currentPage = page;\r\n\r\n  }\r\n\r\n  searchObject() {\r\n    console.log(\"searchObject\", this.searchText);\r\n  }\r\n\r\n  onReloadEvent() {\r\n    this.getUnloadGenerateListById();\r\n  }\r\n\r\n  checkBoxSelectEvent(data) {\r\n    this.productItems = [];\r\n    if (data && data.length > 0) {\r\n      data.filter((obj) => {\r\n        let object = new Object();\r\n        object['product_id'] = obj.product_id;\r\n        object['order_qty'] = obj.order_quantity;\r\n        object['sku_no'] = obj.sku_no;\r\n        object['product_name'] = obj.product_name;\r\n        this.productItems.push(object);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GenerateComponent } from './generate.component';\r\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TableListModule } from 'src/app/common-module/table-list/table-list.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GenerateComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: GenerateComponent\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [GenerateComponent],\r\n  imports: [\r\n    CommonModule,\r\n    Ng2FlatpickrModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TableListModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport class GenerateModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FlatpickrOptions } from 'ng2-flatpickr';\r\nimport { Location } from '@angular/common';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { CommonFunction } from 'src/app/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActionField, TextField, CheckBoxFildes } from 'src/app/common-module/table-list/list-field-type';\r\nimport { PickListService } from 'src/app/service/pick-list.service';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { DATE_TIME_FORMAT } from 'src/app/messages';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-generate',\r\n  templateUrl: './generate.component.html'\r\n})\r\nexport class GenerateComponent implements OnInit {\r\n\r\n  PageTitle = \"Genrate PickList\";\r\n  objectDetails: any = false;\r\n  productList: any = [];\r\n  productItems: Array<any> = [];\r\n  headerData: Array<any> = [];\r\n  pagination: any;\r\n  searchText: any;\r\n  currentPage: any;\r\n  orderId: any;\r\n\r\n  currentCompany: any;\r\n  date_format: string = \"M/d/yy\";\r\n  timezone: string\r\n  time_format: string;\r\n\r\n  addForm: FormGroup;\r\n  showLoader = false;\r\n  formErrors = {\r\n    apierror: null,\r\n  };\r\n  isEditing: any;\r\n  editId: any;\r\n\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private toastr: ToastrService,\r\n    private picklistService: PickListService,\r\n    private paginationService: PaginationService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private dataService: DataService,\r\n    private router: Router,\r\n  ) {\r\n\r\n\r\n\r\n\r\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\r\n      let id = this.activatedRoute.snapshot.paramMap.get('id');\r\n      if (location.path() == `/outbound/pick-list/generate/${id}`) {\r\n        this.orderId = this.activatedRoute.snapshot.paramMap.get('id');\r\n        if (this.orderId) {\r\n          this.getUnloadGenerateListById();\r\n        }\r\n      } else {\r\n        this.editId = id;\r\n        this.isEditing = true;\r\n      }\r\n    }\r\n\r\n    this.addForm = this.fb.group({\r\n      pick_list_date: [null, Validators.compose([Validators.required])],\r\n      sales_order_date: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  exampleOptions: FlatpickrOptions = DATE_TIME_FORMAT\r\n\r\n\r\n  ngOnInit() {\r\n    this.dataService.currentCompany.subscribe((response) => {\r\n      if (response) {\r\n        this.timezone = String(response.timezone.format);;\r\n        this.time_format = response.time_format.label;\r\n        this.date_format = response.date_format.label;\r\n        this.currentCompany = response;\r\n      }\r\n\r\n    });\r\n    this.addForm.patchValue({ pick_list_date: new Date() });\r\n    this.setHeaderData();\r\n  }\r\n\r\n  setHeaderData() {\r\n    this.headerData.push(\r\n\r\n      new CheckBoxFildes({\r\n        class: 'align-items-center d-flex',\r\n        key: \"sales_order_detail_id\",\r\n      }),\r\n      new TextField({\r\n        label: \"SKU\",\r\n        key: \"sku_no\",\r\n      }),\r\n      new TextField({\r\n        label: \"Product\",\r\n        key: \"product_name\",\r\n      }),\r\n      new TextField({\r\n        label: \"Order Quantity\",\r\n        key: \"qty\",\r\n      })\r\n    );\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n    // this.router.navigateByUrl(`/inbound/order/view/${this.orderId}/unloading`);\r\n  }\r\n\r\n  getUnloadGenerateListById() {\r\n    this.picklistService.getPickListGenerateListById(this.orderId).subscribe((response) => {\r\n      if (response.success) {\r\n        this.objectDetails = response.data.sales_order_detail ? response.data.sales_order_detail : {};\r\n        this.productList = response.data.product_list ? response.data.product_list : [];\r\n        this.setData();\r\n        // this.pagination = this.paginationService.getPager(response.data.pagination['total_page'], this.currentPage);\r\n      } else {\r\n        this.objectDetails = null;\r\n        this.productList = [];\r\n        this.pagination = null;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  setData() {\r\n    this.searchText = this.objectDetails.sales_order_no;\r\n    this.addForm.patchValue({\r\n      sales_order_date: this.objectDetails.sales_order_date,\r\n      pick_list_date: new Date()\r\n    });\r\n  }\r\n\r\n  submitForm(formData: any): void {\r\n    if (formData.valid) {\r\n      this.showLoader = true;\r\n      const data = new FormData();\r\n      data.append('pick_list_date', CommonFunction.changedateTimeFormate(formData.value.pick_list_date[0]));\r\n      data.append('po_id', this.orderId);\r\n      // data.append('supplier_id', this.objectDetails.supplier_id);\r\n      data.append('client_id', this.objectDetails.client_id);\r\n      data.append('product', JSON.stringify(this.productItems));\r\n      data.append('sales_order_id', JSON.stringify(this.orderId));\r\n      data.append('pick_list_no', JSON.stringify(this.objectDetails.sales_order_no));\r\n\r\n      if (this.isEditing) {\r\n        // this.picklistService.editUnload(this.editId, data).subscribe((response) => {\r\n        //   this.showLoader = false;\r\n        //   if (response.success) {\r\n        //     this.router.navigateByUrl('/inbound/unload/');\r\n        //   }\r\n        // }, (error) => {\r\n        //   this.showLoader = false;\r\n        // });\r\n      } else {\r\n        this.picklistService.addPickListGenerate(data).subscribe((response) => {\r\n          setTimeout(() => {\r\n            this.showLoader = false;\r\n          }, 700);\r\n          if (response.success) {\r\n            // this.router.navigateByUrl(`/inbound/order/view/${this.orderId}`);\r\n            this.back();\r\n          } else {\r\n            response.error.filter((data) => {\r\n              if (data.hasOwnProperty('product')) {\r\n                this.toastr.error('', 'Please Select a Product...!');\r\n              }\r\n            });\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getPage(page: number) {\r\n    this.currentPage = page;\r\n\r\n  }\r\n\r\n  searchObject() {\r\n    console.log(\"searchObject\", this.searchText);\r\n  }\r\n\r\n  onReloadEvent() {\r\n    this.getUnloadGenerateListById();\r\n  }\r\n\r\n  checkBoxSelectEvent(data) {\r\n    this.productItems = [];\r\n    if (data && data.length > 0) {\r\n      data.filter((obj) => {\r\n        let object = new Object();\r\n        object['product_id'] = obj.product_id;\r\n        object['product_qty'] = obj.qty;\r\n        this.productItems.push(object);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GenerateComponent } from './generate.component';\r\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TableListModule } from 'src/app/common-module/table-list/table-list.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GenerateComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: GenerateComponent\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [GenerateComponent],\r\n  imports: [\r\n    CommonModule,\r\n    Ng2FlatpickrModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TableListModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport class GenerateModule { }\r\n"]}