{"version":3,"sources":["webpack:///src/app/auth/forgot-password/forgot-password.component.html","webpack:///src/app/shared/form-validation/control-error/control-error.component.html","webpack:///src/app/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/auth/forgot-password/forgot-password.module.ts","webpack:///src/app/shared/form-validation/control-error/control-error.component.ts","webpack:///src/app/shared/form-validation/directive/control-error-container.directive.ts","webpack:///src/app/shared/form-validation/directive/control-errors.directive.ts","webpack:///src/app/shared/form-validation/directive/form-submit.directive.ts","webpack:///src/app/shared/form-validation/form-errors.ts","webpack:///src/app/shared/form-validation/form-validation.module.ts"],"names":["ForgotPasswordComponent","router","authService","fBuilder","config","dataService","formErrors","error","success","showLoader","currentCompany","showHeader","forgotForm","group","email","compose","required","subscribe","response","valid","formData","value","company_id","forgotPassword","data","message","resetForm","setTimeout","navigateByUrl","selector","template","routes","path","component","title","ForgotPasswordModule","declarations","imports","forChild","providers","ControlErrorComponent","cdr","_hide","_text","detectChanges","changeDetection","OnPush","ControlErrorContainerDirective","vcr","ControlErrorsDirective","resolver","controlErrorContainer","form","controlDir","customErrors","container","submit$","control","valueChanges","v","controlErrors","errors","control_name","getFormControlName","firstKey","Object","keys","messages","undefined","setError","ref","c","formGroup","parent","controls","find","name","text","factory","resolveComponentFactory","createComponent","instance","FormSubmitDirective","host","element","pipe","classList","contains","add","nativeElement","VALIDATION_MESSAGES","first_name","last_name","validateEmail","phone_number","minlength","maxlength","password","pattern","confirm_password","validatePassword","login_pin","number_tag_to_create","max","min","FormValidationModule","exports","entryComponents"],"mappings":"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","file":"auth-forgot-password-forgot-password-module-es5.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"auth-box private-card\\\">\\r\\n    <div class=\\\"auth-logo\\\">\\r\\n      <h1 class=\\\"text-primary\\\">WMS</h1>\\r\\n    </div>\\r\\n    <div class=\\\"auth-heading\\\">\\r\\n      <h1 class=\\\"heading\\\">Reset your password</h1>\\r\\n      <p>Please enter the email address you'd like your password reset information sent to.</p>\\r\\n      <div *ngIf=\\\"formErrors.success\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <span [innerHTML]=\\\"formErrors.success\\\"> </span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"formErrors.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <span [innerHTML]=\\\"formErrors.error\\\"> </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <form class=\\\"form-signin\\\" [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"submitForm()\\\" >\\r\\n      <div class=\\\"form-group field-loginform-email required\\\">\\r\\n        <label class=\\\"control-label\\\">Email Address</label>\\r\\n        <input type=\\\"text\\\" [formControl]=\\\"forgotForm.controls['email']\\\" class=\\\"form-control input-lg\\\"\\r\\n          placeholder=\\\"Email ID\\\">\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\" [disabled]=\\\"showLoader\\\"\\r\\n        class=\\\"btn btn-primary btn-lg btn-block m-top-24\\\">Reset Password</button>\\r\\n      <p class=\\\"text-muted m-top-24 m-bottom-0 text-center\\\">Remember Password?<a routerLink=\\\"/login\\\"> Log In</a></p>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<p class=\\\"help is-danger\\\" [class.hide]=\\\"_hide\\\" [innerHTML]=\\\"_text\\\"></p>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from 'src/app/service/config.service';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { validateEmailFormControl, CommonFunction } from 'src/app/common';\r\nimport { DataService } from 'src/app/service/data.service';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html'\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  forgotForm: FormGroup;\r\n  formErrors = {\r\n    error: null,\r\n    success: null\r\n  };\r\n  showLoader = false;\r\n  currentCompany: any = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private fBuilder: FormBuilder,\r\n    private config: ConfigService,\r\n    private dataService: DataService\r\n  ) {\r\n    this.config.config = { showHeader: false };\r\n    this.forgotForm = this.fBuilder.group({\r\n      email: [null, Validators.compose([Validators.required, validateEmailFormControl])],\r\n    });\r\n    this.dataService.currentCompany.subscribe((response) => {\r\n      this.currentCompany = response;\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  submitForm(): void {\r\n    if (this.forgotForm.valid) {\r\n      this.showLoader = true;\r\n      const formData = {\r\n        email: this.forgotForm.value.email,\r\n        company_id: this.currentCompany ? this.currentCompany.company_id : null,\r\n      };\r\n      this.authService.forgotPassword(formData).subscribe((response) => {\r\n        this.showLoader = false;\r\n        if (response.success) {\r\n          this.formErrors.success = `* ${response.data.message}`;\r\n          CommonFunction.resetForm(this.forgotForm);\r\n          setTimeout(() => {\r\n            this.router.navigateByUrl('/login');\r\n          }, 3000);\r\n        } else {\r\n          this.formErrors.error = `* ${response.error}`;\r\n        }\r\n      },\r\n        (error) => {\r\n          this.formErrors.error = `* ${error.error}`;\r\n          this.showLoader = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordComponent,\r\n    data: { title: 'forgot_password' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class ForgotPasswordModule { }\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-control-error',\r\n  templateUrl: './control-error.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ControlErrorComponent implements OnInit {\r\n\r\n  _text;\r\n  _hide = true;\r\n\r\n  @Input() set text(value) {\r\n    if (value !== this._text) {\r\n      this._text = value;\r\n      this._hide = !value;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[controlErrorContainer]'\r\n})\r\nexport class ControlErrorContainerDirective {\r\n\r\n  constructor(public vcr: ViewContainerRef) { }\r\n\r\n}\r\n","import {\r\n  Directive, Optional, ViewContainerRef, ComponentFactoryResolver,\r\n  ComponentRef, Input, Host, OnInit, OnDestroy\r\n} from '@angular/core';\r\nimport { NgControl, AbstractControl } from '@angular/forms';\r\nimport { ControlErrorComponent } from '../control-error/control-error.component';\r\nimport { ControlErrorContainerDirective } from './control-error-container.directive';\r\nimport { FormSubmitDirective } from './form-submit.directive';\r\nimport { merge, EMPTY, Observable } from 'rxjs';\r\nimport { VALIDATION_MESSAGES } from '../form-errors';\r\n\r\n\r\n@Directive({\r\n  selector: '[formControl], [formControlName]'\r\n})\r\nexport class ControlErrorsDirective implements OnInit, OnDestroy {\r\n\r\n  ref: ComponentRef<ControlErrorComponent>;\r\n  container: ViewContainerRef;\r\n  submit$: Observable<Event>;\r\n  @Input() customErrors = {};\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private resolver: ComponentFactoryResolver,\r\n    @Optional() controlErrorContainer: ControlErrorContainerDirective,\r\n    @Optional() @Host() private form: FormSubmitDirective,\r\n    private controlDir: NgControl) {\r\n    this.container = controlErrorContainer ? controlErrorContainer.vcr : vcr;\r\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control && this.control.valueChanges) {\r\n      merge(\r\n        this.control.valueChanges,\r\n        this.submit$\r\n      ).subscribe((v) => {\r\n        const controlErrors = this.control.errors;\r\n        if (controlErrors) {\r\n          const control_name = this.getFormControlName(this.control);\r\n          // console.log(control_name, controlErrors);\r\n          const firstKey = Object.keys(controlErrors)[0];\r\n          const messages = VALIDATION_MESSAGES[control_name];\r\n          if (messages !== undefined && messages !== null && messages !== '') {\r\n            this.setError(messages[firstKey]);\r\n          }\r\n        } else if (this.ref) {\r\n          this.setError(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getFormControlName(c: AbstractControl): string | null {\r\n    const formGroup = c.parent.controls;\r\n    return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\r\n  }\r\n\r\n  get control() {\r\n    return this.controlDir.control;\r\n  }\r\n\r\n  setError(text: string) {\r\n    if (!this.ref) {\r\n      const factory = this.resolver.resolveComponentFactory(ControlErrorComponent);\r\n      this.ref = this.container.createComponent(factory);\r\n    }\r\n\r\n    this.ref.instance.text = text;\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n  selector: 'form'\r\n})\r\nexport class FormSubmitDirective {\r\n\r\n  constructor(private host: ElementRef<HTMLFormElement>) { }\r\n\r\n  submit$ = fromEvent(this.element, 'submit').pipe(tap(() => {\r\n    if (this.element.classList.contains('submitted') === false) {\r\n      this.element.classList.add('submitted');\r\n    }\r\n  }), shareReplay(1));\r\n\r\n  get element() {\r\n    return this.host.nativeElement;\r\n  }\r\n\r\n}\r\n","export const VALIDATION_MESSAGES = {\r\n  first_name: {\r\n    required: `* Please enter first name`,\r\n  },\r\n  last_name: {\r\n    required: `* Please enter last name`,\r\n  },\r\n  email: {\r\n    required: `* Please enter email`,\r\n    email: `* Please enter valid email`,\r\n    validateEmail: `* Please enter valid email`,\r\n  },\r\n  phone_number: {\r\n    required: `Please enter phone number`,\r\n    minlength: `Please enter at least 8 digits`,\r\n    maxlength: `Please enter at least 18 digits`\r\n  },\r\n  password: {\r\n    required: `* Please enter password`,\r\n    pattern: `* Password must contains at least 6 characters`,\r\n  },\r\n  confirm_password: {\r\n    required: `* Please enter confirm password`,\r\n    validatePassword: `* Your Password is not matched`,\r\n  },\r\n\r\n \r\n  login_pin: {\r\n    required: `* Please enter PIN`,\r\n    maxlength: `Pin Max 4 Digit`,\r\n    minlength: `Please enter at least 4 digits`,\r\n  },\r\n \r\n  number_tag_to_create: {\r\n    required: `* Please enter vlaue`,\r\n    max: `Maximum 100`,\r\n    min:` Minimum 1`\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormSubmitDirective } from './directive/form-submit.directive';\r\nimport { ControlErrorsDirective } from './directive/control-errors.directive';\r\nimport { ControlErrorContainerDirective } from './directive/control-error-container.directive';\r\nimport { ControlErrorComponent } from './control-error/control-error.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  exports: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  entryComponents: [\r\n    ControlErrorComponent\r\n  ]\r\n})\r\nexport class FormValidationModule { }\r\n"]}