{"version":3,"sources":["./src/app/auth/forgot-password/forgot-password.component.html","./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/forgot-password/forgot-password.module.ts"],"names":[],"mappings":"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","file":"auth-forgot-password-forgot-password-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"auth-box private-card\\\">\\r\\n    <div class=\\\"auth-logo\\\">\\r\\n      <h1 class=\\\"text-primary\\\">WMS</h1>\\r\\n    </div>\\r\\n    <div class=\\\"auth-heading\\\">\\r\\n      <h1 class=\\\"heading\\\">Reset your password</h1>\\r\\n      <p>Please enter the email address you'd like your password reset information sent to.</p>\\r\\n      <div *ngIf=\\\"formErrors.success\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <span [innerHTML]=\\\"formErrors.success\\\"> </span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"formErrors.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <span [innerHTML]=\\\"formErrors.error\\\"> </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <form class=\\\"form-signin\\\" [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"submitForm()\\\" >\\r\\n      <div class=\\\"form-group field-loginform-email required\\\">\\r\\n        <label class=\\\"control-label\\\">Email Address</label>\\r\\n        <input type=\\\"text\\\" [formControl]=\\\"forgotForm.controls['email']\\\" class=\\\"form-control input-lg\\\"\\r\\n          placeholder=\\\"Email ID\\\">\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\" [disabled]=\\\"showLoader\\\"\\r\\n        class=\\\"btn btn-primary btn-lg btn-block m-top-24\\\">Reset Password</button>\\r\\n      <p class=\\\"text-muted m-top-24 m-bottom-0 text-center\\\">Remember Password?<a routerLink=\\\"/login\\\"> Log In</a></p>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from 'src/app/service/config.service';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { validateEmailFormControl, CommonFunction } from 'src/app/common';\r\nimport { DataService } from 'src/app/service/data.service';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html'\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  forgotForm: FormGroup;\r\n  formErrors = {\r\n    error: null,\r\n    success: null\r\n  };\r\n  showLoader = false;\r\n  currentCompany: any = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private fBuilder: FormBuilder,\r\n    private config: ConfigService,\r\n    private dataService: DataService\r\n  ) {\r\n    this.config.config = { showHeader: false };\r\n    this.forgotForm = this.fBuilder.group({\r\n      email: [null, Validators.compose([Validators.required, validateEmailFormControl])],\r\n    });\r\n    this.dataService.currentCompany.subscribe((response) => {\r\n      this.currentCompany = response;\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  submitForm(): void {\r\n    if (this.forgotForm.valid) {\r\n      this.showLoader = true;\r\n      const formData = {\r\n        email: this.forgotForm.value.email,\r\n        company_id: this.currentCompany ? this.currentCompany.company_id : null,\r\n      };\r\n      this.authService.forgotPassword(formData).subscribe((response) => {\r\n        this.showLoader = false;\r\n        if (response.success) {\r\n          this.formErrors.success = `* ${response.data.message}`;\r\n          CommonFunction.resetForm(this.forgotForm);\r\n          setTimeout(() => {\r\n            this.router.navigateByUrl('/login');\r\n          }, 3000);\r\n        } else {\r\n          this.formErrors.error = `* ${response.error}`;\r\n        }\r\n      },\r\n        (error) => {\r\n          this.formErrors.error = `* ${error.error}`;\r\n          this.showLoader = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordComponent,\r\n    data: { title: 'forgot_password' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class ForgotPasswordModule { }\r\n"],"sourceRoot":"webpack:///"}