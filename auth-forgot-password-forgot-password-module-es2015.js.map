{"version":3,"sources":["./src/app/auth/forgot-password/forgot-password.component.html","./src/app/shared/form-validation/control-error/control-error.component.html","./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/forgot-password/forgot-password.module.ts","./src/app/shared/form-validation/control-error/control-error.component.ts","./src/app/shared/form-validation/directive/control-error-container.directive.ts","./src/app/shared/form-validation/directive/control-errors.directive.ts","./src/app/shared/form-validation/directive/form-submit.directive.ts","./src/app/shared/form-validation/form-errors.ts","./src/app/shared/form-validation/form-validation.module.ts"],"names":[],"mappings":"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","file":"auth-forgot-password-forgot-password-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"auth-box private-card\\\">\\r\\n    <div class=\\\"auth-logo\\\">\\r\\n      <h1 class=\\\"text-primary\\\">WMS</h1>\\r\\n    </div>\\r\\n    <div class=\\\"auth-heading\\\">\\r\\n      <h1 class=\\\"heading\\\">Reset your password</h1>\\r\\n      <p>Please enter the email address you'd like your password reset information sent to.</p>\\r\\n      <div *ngIf=\\\"formErrors.success\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <span [innerHTML]=\\\"formErrors.success\\\"> </span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"formErrors.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <span [innerHTML]=\\\"formErrors.error\\\"> </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <form class=\\\"form-signin\\\" [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"submitForm()\\\" >\\r\\n      <div class=\\\"form-group field-loginform-email required\\\">\\r\\n        <label class=\\\"control-label\\\">Email Address</label>\\r\\n        <input type=\\\"text\\\" [formControl]=\\\"forgotForm.controls['email']\\\" class=\\\"form-control input-lg\\\"\\r\\n          placeholder=\\\"Email ID\\\">\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\" [disabled]=\\\"showLoader\\\"\\r\\n        class=\\\"btn btn-primary btn-lg btn-block m-top-24\\\">Reset Password</button>\\r\\n      <p class=\\\"text-muted m-top-24 m-bottom-0 text-center\\\">Remember Password?<a routerLink=\\\"/login\\\"> Log In</a></p>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<p class=\\\"help is-danger\\\" [class.hide]=\\\"_hide\\\" [innerHTML]=\\\"_text\\\"></p>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from 'src/app/service/config.service';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { validateEmailFormControl, CommonFunction } from 'src/app/common';\r\nimport { DataService } from 'src/app/service/data.service';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html'\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  forgotForm: FormGroup;\r\n  formErrors = {\r\n    error: null,\r\n    success: null\r\n  };\r\n  showLoader = false;\r\n  currentCompany: any = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private fBuilder: FormBuilder,\r\n    private config: ConfigService,\r\n    private dataService: DataService\r\n  ) {\r\n    this.config.config = { showHeader: false };\r\n    this.forgotForm = this.fBuilder.group({\r\n      email: [null, Validators.compose([Validators.required, validateEmailFormControl])],\r\n    });\r\n    this.dataService.currentCompany.subscribe((response) => {\r\n      this.currentCompany = response;\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  submitForm(): void {\r\n    if (this.forgotForm.valid) {\r\n      this.showLoader = true;\r\n      const formData = {\r\n        email: this.forgotForm.value.email,\r\n        company_id: this.currentCompany ? this.currentCompany.company_id : null,\r\n      };\r\n      this.authService.forgotPassword(formData).subscribe((response) => {\r\n        this.showLoader = false;\r\n        if (response.success) {\r\n          this.formErrors.success = `* ${response.data.message}`;\r\n          CommonFunction.resetForm(this.forgotForm);\r\n          setTimeout(() => {\r\n            this.router.navigateByUrl('/login');\r\n          }, 3000);\r\n        } else {\r\n          this.formErrors.error = `* ${response.error}`;\r\n        }\r\n      },\r\n        (error) => {\r\n          this.formErrors.error = `* ${error.error}`;\r\n          this.showLoader = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordComponent,\r\n    data: { title: 'forgot_password' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class ForgotPasswordModule { }\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-control-error',\r\n  templateUrl: './control-error.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ControlErrorComponent implements OnInit {\r\n\r\n  _text;\r\n  _hide = true;\r\n\r\n  @Input() set text(value) {\r\n    if (value !== this._text) {\r\n      this._text = value;\r\n      this._hide = !value;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[controlErrorContainer]'\r\n})\r\nexport class ControlErrorContainerDirective {\r\n\r\n  constructor(public vcr: ViewContainerRef) { }\r\n\r\n}\r\n","import {\r\n  Directive, Optional, ViewContainerRef, ComponentFactoryResolver,\r\n  ComponentRef, Input, Host, OnInit, OnDestroy\r\n} from '@angular/core';\r\nimport { NgControl, AbstractControl } from '@angular/forms';\r\nimport { ControlErrorComponent } from '../control-error/control-error.component';\r\nimport { ControlErrorContainerDirective } from './control-error-container.directive';\r\nimport { FormSubmitDirective } from './form-submit.directive';\r\nimport { merge, EMPTY, Observable } from 'rxjs';\r\nimport { VALIDATION_MESSAGES } from '../form-errors';\r\n\r\n\r\n@Directive({\r\n  selector: '[formControl], [formControlName]'\r\n})\r\nexport class ControlErrorsDirective implements OnInit, OnDestroy {\r\n\r\n  ref: ComponentRef<ControlErrorComponent>;\r\n  container: ViewContainerRef;\r\n  submit$: Observable<Event>;\r\n  @Input() customErrors = {};\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private resolver: ComponentFactoryResolver,\r\n    @Optional() controlErrorContainer: ControlErrorContainerDirective,\r\n    @Optional() @Host() private form: FormSubmitDirective,\r\n    private controlDir: NgControl) {\r\n    this.container = controlErrorContainer ? controlErrorContainer.vcr : vcr;\r\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control && this.control.valueChanges) {\r\n      merge(\r\n        this.control.valueChanges,\r\n        this.submit$\r\n      ).subscribe((v) => {\r\n        const controlErrors = this.control.errors;\r\n        if (controlErrors) {\r\n          const control_name = this.getFormControlName(this.control);\r\n          // console.log(control_name, controlErrors);\r\n          const firstKey = Object.keys(controlErrors)[0];\r\n          const messages = VALIDATION_MESSAGES[control_name];\r\n          if (messages !== undefined && messages !== null && messages !== '') {\r\n            this.setError(messages[firstKey]);\r\n          }\r\n        } else if (this.ref) {\r\n          this.setError(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getFormControlName(c: AbstractControl): string | null {\r\n    const formGroup = c.parent.controls;\r\n    return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\r\n  }\r\n\r\n  get control() {\r\n    return this.controlDir.control;\r\n  }\r\n\r\n  setError(text: string) {\r\n    if (!this.ref) {\r\n      const factory = this.resolver.resolveComponentFactory(ControlErrorComponent);\r\n      this.ref = this.container.createComponent(factory);\r\n    }\r\n\r\n    this.ref.instance.text = text;\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n  selector: 'form'\r\n})\r\nexport class FormSubmitDirective {\r\n\r\n  constructor(private host: ElementRef<HTMLFormElement>) { }\r\n\r\n  submit$ = fromEvent(this.element, 'submit').pipe(tap(() => {\r\n    if (this.element.classList.contains('submitted') === false) {\r\n      this.element.classList.add('submitted');\r\n    }\r\n  }), shareReplay(1));\r\n\r\n  get element() {\r\n    return this.host.nativeElement;\r\n  }\r\n\r\n}\r\n","export const VALIDATION_MESSAGES = {\r\n  first_name: {\r\n    required: `* Please enter first name`,\r\n  },\r\n  last_name: {\r\n    required: `* Please enter last name`,\r\n  },\r\n  email: {\r\n    required: `* Please enter email`,\r\n    email: `* Please enter valid email`,\r\n    validateEmail: `* Please enter valid email`,\r\n  },\r\n  phone_number: {\r\n    required: `Please enter phone number`,\r\n    minlength: `Please enter at least 8 digits`,\r\n    maxlength: `Please enter at least 18 digits`\r\n  },\r\n  password: {\r\n    required: `* Please enter password`,\r\n    pattern: `* Password must contains at least 6 characters`,\r\n  },\r\n  confirm_password: {\r\n    required: `* Please enter confirm password`,\r\n    validatePassword: `* Your Password is not matched`,\r\n  },\r\n\r\n \r\n  login_pin: {\r\n    required: `* Please enter PIN`,\r\n    maxlength: `Pin Max 4 Digit`,\r\n    minlength: `Please enter at least 4 digits`,\r\n  },\r\n \r\n  number_tag_to_create: {\r\n    required: `* Please enter vlaue`,\r\n    max: `Maximum 100`,\r\n    min:` Minimum 1`\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormSubmitDirective } from './directive/form-submit.directive';\r\nimport { ControlErrorsDirective } from './directive/control-errors.directive';\r\nimport { ControlErrorContainerDirective } from './directive/control-error-container.directive';\r\nimport { ControlErrorComponent } from './control-error/control-error.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  exports: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  entryComponents: [\r\n    ControlErrorComponent\r\n  ]\r\n})\r\nexport class FormValidationModule { }\r\n"],"sourceRoot":"webpack:///"}