{"version":3,"sources":["./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.module.ts"],"names":[],"mappings":"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","file":"auth-login-login-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"auth-box private-card\\\">\\r\\n    <div class=\\\"auth-logo\\\">\\r\\n      <h1 class=\\\"text-primary\\\">WMS</h1>\\r\\n    </div>\\r\\n    <div class=\\\"auth-heading\\\">\\r\\n      <h1 class=\\\"heading\\\">Let's Get Started</h1>\\r\\n      <p>Hi! Please enter your login information below to send submissions as contacts.</p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"formErrors.apierror\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n      <a class=\\\"close\\\" (click)=\\\"removeError()\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n      <span [innerHTML]=\\\"formErrors.apierror\\\"> </span>\\r\\n    </div>\\r\\n    <form *ngIf=\\\"loginType == 'email'\\\" class=\\\"form-signin\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\r\\n      <div class=\\\"form-group field-loginform-email required\\\">\\r\\n        <label class=\\\"control-label\\\">Email Address</label>\\r\\n        <input type=\\\"text\\\" [formControl]=\\\"loginForm.controls['email']\\\" class=\\\"form-control input-lg\\\"\\r\\n          placeholder=\\\"Email ID\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group field-loginform-password required\\\">\\r\\n        <label class=\\\"control-label\\\">Password</label>\\r\\n        <input type=\\\"password\\\" [formControl]=\\\"loginForm.controls['password']\\\" class=\\\"form-control input-lg\\\"\\r\\n          placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n      <div class=\\\"\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-check form-check-inline mr-0\\\">\\r\\n            <div class=\\\"checkbox-container\\\">\\r\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"all\\\">\\r\\n              <span class=\\\"checkmark\\\"></span>\\r\\n            </div>\\r\\n            <label class=\\\"checkbox-set mb-0 ml-1\\\"> Remember Me</label>\\r\\n          </div>\\r\\n\\r\\n          <a routerLink=\\\"/forgot-password\\\" class=\\\"pull-right\\\"><small>Forgot\\r\\n              password?</small></a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block mt-4\\\"\\r\\n        [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\" [disabled]=\\\"showLoader\\\">\\r\\n        Log In\\r\\n      </button>\\r\\n      <p class=\\\"text-muted mt-4 m-bottom-0 text-center\\\">Don't have an account yet?<a routerLink=\\\"/\\\"> Sign\\r\\n          Up</a></p>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from 'src/app/service/config.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { validateEmailFormControl, CommonFunction } from 'src/app/common';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { CommonService } from 'src/app/service/common.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  formErrors = {\r\n    apierror: null\r\n  };\r\n  showLoader = false;\r\n  isAuthenticated: boolean;\r\n  isCompanySelected: boolean;\r\n  loginType = 'email'\r\n  constructor(\r\n    private config: ConfigService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private commonService: CommonService,\r\n    private fBuilder: FormBuilder,\r\n    private dataService: DataService\r\n  ) {\r\n    this.config.config = { showHeader: false };\r\n    this.loginForm = this.fBuilder.group({\r\n      email: [null, Validators.compose([Validators.required, validateEmailFormControl])],\r\n      password: [null, Validators.compose([Validators.required])], // validatePassword\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  changeLoginType(type) {\r\n    this.loginType = type;\r\n  }\r\n  getLoginType(type) {\r\n    this.loginType = type;\r\n  }\r\n  submitForm(): void {\r\n    if (this.loginForm.valid) {\r\n      this.showLoader = true;\r\n      const formData = {\r\n        email: this.loginForm.value.email.toLowerCase(),\r\n        password: this.loginForm.value.password,\r\n        remember_me: this.loginForm.value.remember_me,\r\n      };\r\n      this.authService.login(formData).subscribe((response) => {\r\n        this.showLoader = false;\r\n        if (response.success) {\r\n          CommonFunction.resetForm(this.loginForm);\r\n          const user = response.data.User;\r\n          this.dataService.setAuth(response.data);\r\n          if (user.is_superuser) {\r\n            this.dataService.purgeCompany();\r\n          }\r\n          this.config.config = { showHeader: true };\r\n          this.activatedRoute.snapshot.queryParamMap.get('next');\r\n          const nextURL = this.activatedRoute.snapshot.queryParamMap.get('next') ?\r\n            this.activatedRoute.snapshot.queryParamMap.get('next') : '/dashboard';\r\n          this.router.navigateByUrl(nextURL);\r\n        } else {\r\n          this.formErrors.apierror = `* ${response.error[0]}`;\r\n        }\r\n      }, (error) => {\r\n        this.formErrors.apierror = `* Server Error`;\r\n        this.showLoader = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  removeError(){\r\n    this.formErrors.apierror=null;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n    data: { title: 'login' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":"webpack:///"}