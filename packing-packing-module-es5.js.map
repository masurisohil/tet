{"version":3,"sources":["webpack:///src/app/pages/outbound/packing/packing.component.html","webpack:///src/app/pages/outbound/packing/packing.component.ts","webpack:///src/app/pages/outbound/packing/packing.module.ts","webpack:///src/app/service/packing.service.ts"],"names":["PackingComponent","paginationService","packingService","loadingState","objectArray","headerData","pagination","searchText","currentPage","statusListArray","getMasterData","setHeaderData","getObjects","getListFilterData","subscribe","responce","success","data","status","push","label","key","viewUrl","path","id","canEdit","canView","canDelete","actions","actionColom","params","page","status_id","search","getPackingList","response","list","getPager","error","text","selector","template","routes","component","title","loadChildren","then","m","AddPackingModule","PackingViewModule","PackingModule","declarations","imports","forChild","providers","PackingService","http","API_URL","APIEndpoint","param","get","post","put","providedIn"],"mappings":"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","file":"packing-packing-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"page-header\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col d-flex\\\">\\r\\n                <h2 class=\\\"mr-auto\\\">Picking new</h2>\\r\\n                <div>\\r\\n                    <ng-select style=\\\"width: 180px;\\\" [(ngModel)]=\\\"status_id\\\" (change)=\\\"getObjects()\\\"\\r\\n                        [items]=\\\"statusListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Status\\\">\\r\\n                    </ng-select>\\r\\n                </div>\\r\\n                <div class=\\\"ml-3\\\">\\r\\n                    <search-box (text)=\\\"searchObject($event)\\\" [placeholder]=\\\"'Search Here...'\\\"></search-box>\\r\\n                </div>\\r\\n                <div class=\\\"ml-3\\\">\\r\\n                    <app-btn-add [btnName]=\\\"'Add Packing'\\\" [editData]=\\\"'/outbound/packing/add'\\\">\\r\\n                    </app-btn-add>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <app-table-list [headerData]=\\\"headerData\\\" [rawData]=\\\"objectArray\\\" (reloadEvent)=\\\"onReloadEvent()\\\">\\r\\n            </app-table-list>\\r\\n            <pagination [paginationList]=\\\"pagination\\\" [currentPage]=\\\"currentPage\\\" (onPageChange)=\\\"getPage($event)\\\">\\r\\n            </pagination>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { TextField, ActionField, TextViewUrlField, DateField, StatusField, IndexField } from 'src/app/common-module/table-list/list-field-type';\r\nimport { PackingService } from 'src/app/service/packing.service';\r\n\r\n@Component({\r\n  selector: 'app-packing',\r\n  templateUrl: './packing.component.html'\r\n})\r\nexport class PackingComponent implements OnInit {\r\n\r\n  loadingState = true;\r\n  objectArray: Array<any> = [];\r\n\r\n  headerData: Array<any> = [];\r\n  pagination: any = null;\r\n  searchText: any = null;\r\n  currentPage: any = 1;\r\n  status_id: any;\r\n  statusListArray: any = [];\r\n  constructor(\r\n    private paginationService: PaginationService,\r\n    private packingService: PackingService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getMasterData();\r\n    this.setHeaderData();\r\n    this.getObjects();\r\n  }\r\n  getMasterData() {\r\n    this.packingService.getListFilterData().subscribe((responce) => {\r\n      if (responce.success) {\r\n        this.statusListArray = responce.data.status;\r\n      }\r\n    });\r\n  }\r\n  setHeaderData() {\r\n    this.headerData.push(\r\n      new IndexField({\r\n        label: \"No.\",\r\n      }),\r\n      new TextViewUrlField({\r\n        label: \"Pick No\",\r\n        key: \"pick_no\",\r\n        viewUrl: {\r\n          path: '/outbound/packing/view/',\r\n          id: 'sales_order_id'\r\n        }\r\n      }),\r\n      new DateField({\r\n        label: \"Order No\",\r\n        key: \"sales_order_date\",\r\n      }),\r\n      new TextField({\r\n        label: \"Order Code\",\r\n        key: 'sales_order_no',\r\n      }),\r\n\r\n      new TextField({\r\n        label: \"Client\",\r\n        key: \"client.label\",\r\n      }),\r\n      new TextField({\r\n        label: \"Client Code\",\r\n        key: \"client.client_code\",\r\n      }),\r\n\r\n      new StatusField({\r\n        label: \"Status\",\r\n        key: \"status.label\",\r\n      }),\r\n    );\r\n    let canEdit = true;\r\n    let canView = true;\r\n    let canDelete = true;\r\n    let actions = {};\r\n    if (canEdit) {\r\n      actions['edit'] = {\r\n        path: '/outbound/packing/edit/',\r\n        id: 'sales_order_id'\r\n      }\r\n    }\r\n    if (canView) {\r\n      actions['view'] = {\r\n        path: '/outbound/packing/view/',\r\n        id: 'sales_order_id'\r\n      }\r\n    }\r\n    if (canDelete) {\r\n      actions['delete'] = {\r\n        path: 'packing/sales-order-list/',\r\n        id: 'sales_order_id'\r\n      }\r\n    }\r\n    let actionColom = new ActionField(actions);\r\n    this.headerData.push(\r\n      actionColom\r\n    );\r\n  }\r\n\r\n\r\n  getObjects() {\r\n    const params: any = { page: this.currentPage };\r\n    if (this.status_id) {\r\n      params.status_id = this.status_id;\r\n    }\r\n\r\n    if (this.searchText) {\r\n      params.search = this.searchText;\r\n    }\r\n    this.packingService.getPackingList(params).subscribe((response) => {\r\n      this.loadingState = false;\r\n      if (response.success && response.data) {\r\n        this.objectArray = response.data.list;\r\n        this.pagination = this.paginationService.getPager(response.data.pagination['total_page'], this.currentPage);\r\n      } else {\r\n        this.objectArray = [];\r\n        this.pagination = null;\r\n      }\r\n    }, (error) => {\r\n      this.loadingState = false;\r\n      this.objectArray = [];\r\n      this.pagination = null;\r\n    });\r\n  }\r\n\r\n  getPage(page: number) {\r\n    this.currentPage = page;\r\n    // this.currentPage = 1;\r\n    this.getObjects();\r\n  }\r\n\r\n  onReloadEvent() {\r\n    this.getObjects();\r\n  }\r\n\r\n  searchObject(text) {\r\n    this.searchText = text;\r\n    this.currentPage = 1;\r\n    this.getObjects();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchModule } from 'src/app/common-module/search/search.module';\r\nimport { BtnAddModule } from 'src/app/common-module/btn-add/btn-add.module';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { PaginationModule } from 'src/app/common-module/pagination/pagination.module';\r\nimport { TableListModule } from 'src/app/common-module/table-list/table-list.module';\r\nimport { PackingComponent } from './packing.component';\r\nimport { PackingService } from 'src/app/service/packing.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PackingComponent,\r\n    data: { title: 'packing_list' },\r\n  },\r\n  {\r\n    path: 'add',\r\n    loadChildren: () => import('./add-packing/add-packing.module').then(m => m.AddPackingModule),\r\n    data: { title: 'add_packing' },\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    loadChildren: () => import('./add-packing/add-packing.module').then(m => m.AddPackingModule),\r\n    data: { title: 'edit_packing' },\r\n  },\r\n  {\r\n    path: 'view/:id',\r\n    loadChildren: () => import('./packing-view/packing-view.module').then(m => m.PackingViewModule),\r\n    data: { title: 'view_packing' },\r\n  },\r\n\r\n\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [PackingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    RouterModule.forChild(routes),\r\n    SearchModule,\r\n    BtnAddModule,\r\n    PaginationModule,\r\n    TableListModule,\r\n  ], providers: [PackingService]\r\n})\r\nexport class PackingModule { }\r\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class PackingService {\n\n    API_URL: string = environment.APIEndpoint;\n\n    constructor(\n        private http: HttpClient,\n    ) { }\n\n    //list page\n    getListFilterData(param = null): Observable<any> {\n        return this.http.get(`${this.API_URL}/packing/list-filter-drp`, { params: param });\n    }\n\n    getPackingList(param): Observable<any> {\n        return this.http.get(`${this.API_URL}/packing/sales-order-list`, { params: param });\n    }\n\n    // add page\n    getMasterData(param: any): Observable<any> {\n        return this.http.get(`${this.API_URL}/packing/master-data`, { params: param });\n    }\n    getSalesOrderDetail(id): Observable<any> {\n        return this.http.get(`${this.API_URL}/packing/get-product-for-packing/${id}`);\n    }\n\n\n    addPacking(data): Observable<any> {\n        return this.http.post(`${this.API_URL}/packing/generate`, data);\n    }\n\n    editPacking(id, data): Observable<any> {\n        return this.http.put(`${this.API_URL}/Packing/${id}`, data);\n    }\n\n    // getPackingById(id, param = null): Observable<any> {\n    //     return this.http.get(`${this.API_URL}/picking/sales-order-view-pick-list/${id}`, { params: param });\n    // }\n    getPackingviewOrderById(id, param = null): Observable<any> {\n        return this.http.get(`${this.API_URL}/packing/sales-order-view-packing-list/${id}`, { params: param });\n    }\n\n}\n\n"]}