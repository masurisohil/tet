{"version":3,"sources":["webpack:///src/app/pages/master/order-type/add-order-type/add-order-type.component.html","webpack:///src/app/pages/master/order-type/order-type-list/order-type-list.component.html","webpack:///src/app/pages/master/order-type/add-order-type/add-order-type.component.ts","webpack:///src/app/pages/master/order-type/order-type-list/order-type-list.component.ts","webpack:///src/app/pages/master/order-type/order-type.module.ts","webpack:///src/app/service/order-type.service.ts"],"names":["AddOrderTypeComponent","router","activatedRoute","fb","ordertypeService","commonservice","PageTitle","loadingState","showLoader","formErrors","order_type_code","apierror","isEditing","editId","snapshot","paramMap","get","addForm","group","order_type_name","compose","required","getEditObject","getOrderTypeById","subscribe","response","success","patchValue","data","navigateByUrl","formData","valid","FormData","append","value","editOrderType","error","map","obj","hasOwnProperty","addOrderType","selector","template","OrderTypeListComponent","paginationService","loadform","objectArray","pagination","searchText","currentPage","permissionObject","showPagination","headerData","setHeaderData","getObjects","push","label","key","canEdit","canDelete","actions","path","id","actionColom","params","page","search","getOrderTypeList","list","getPager","text","routes","component","title","OrderTypeModule","declarations","imports","forChild","providers","OrderTypeService","http","API_URL","APIEndpoint","param","post","put"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAaA,qBAAqB;AAAA;AAAA;AAehC,qCACUC,MADV,EAEUC,cAFV,EAGUC,EAHV,EAIUC,gBAJV,EAKUC,aALV,EAKsC;AAAA;;AAJ5B,aAAAJ,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AAlBV,aAAAC,SAAA,GAAY,YAAZ;AAEA,aAAAC,YAAA,GAAe,KAAf;AAGA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,UAAA,GAAa;AACXC,yBAAe,EAAE,IADN;AAEXC,kBAAQ,EAAE;AAFC,SAAb;AAIA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,MAAA,GAAS,IAAT;;AASE,YAAI,KAAKX,cAAL,CAAoBY,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAAJ,EAAqD;AACnD,eAAKJ,SAAL,GAAiB,IAAjB;AACA,eAAKC,MAAL,GAAc,KAAKX,cAAL,CAAoBY,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAAd;AACD;;AAED,aAAKC,OAAL,GAAe,KAAKd,EAAL,CAAQe,KAAR,CAAc;AAC3BC,yBAAe,EAAE,CAAC,IAAD,EAAO,0DAAWC,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CADU;AAE3BX,yBAAe,EAAE,CAAC,IAAD,EAAO,0DAAWU,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP;AAFU,SAAd,CAAf;AAKD;;AAhC+B;AAAA;AAAA,mCAkCrB;AACT,cAAI,KAAKT,SAAT,EAAoB;AAClB,iBAAKU,aAAL;AACD;AACF;AAtC+B;AAAA;AAAA,wCA6ChB;AAAA;;AACd,eAAKlB,gBAAL,CAAsBmB,gBAAtB,CAAuC,KAAKV,MAA5C,EAAoDW,SAApD,CAA8D,UAACC,QAAD,EAAc;AAC1E,gBAAIA,QAAQ,CAACC,OAAb,EAAsB;AACpB,mBAAI,CAACT,OAAL,CAAaU,UAAb,CAAwBF,QAAQ,CAACG,IAAjC;AACD,aAFD,MAEO;AACL,mBAAI,CAAC3B,MAAL,CAAY4B,aAAZ,CAA0B,oBAA1B;AACD;AACF,WAND;AAOD;AArD+B;AAAA;AAAA,mCAuDrBC,QAvDqB,EAuDR;AAAA;;AACtB,cAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB,iBAAKvB,UAAL,GAAkB,IAAlB;AACA,gBAAMoB,IAAI,GAAG,IAAII,QAAJ,EAAb;AACAJ,gBAAI,CAACK,MAAL,CAAY,iBAAZ,EAA+BH,QAAQ,CAACI,KAAT,CAAef,eAA9C;AACAS,gBAAI,CAACK,MAAL,CAAY,iBAAZ,EAA+BH,QAAQ,CAACI,KAAT,CAAexB,eAA9C;;AAEA,gBAAI,KAAKE,SAAT,EAAoB;AAClB,mBAAKR,gBAAL,CAAsB+B,aAAtB,CAAoC,KAAKtB,MAAzC,EAAiDe,IAAjD,EAAuDJ,SAAvD,CAAiE,UAACC,QAAD,EAAc;AAC7E,sBAAI,CAACjB,UAAL,GAAkB,KAAlB;;AACA,oBAAIiB,QAAQ,CAACC,OAAb,EAAsB;AACpB,wBAAI,CAACzB,MAAL,CAAY4B,aAAZ,CAA0B,oBAA1B;AACD,iBAFD,MAEO;AACLJ,0BAAQ,CAACW,KAAT,CAAeC,GAAf,CAAmB,UAAAC,GAAG,EAAI;AACxB,wBAAIA,GAAG,CAACC,cAAJ,CAAmB,iBAAnB,CAAJ,EAA2C;AACzC,4BAAI,CAAC9B,UAAL,CAAgB,iBAAhB,IAAqC6B,GAAG,CAAC,iBAAD,CAAxC;AACD,qBAFD,MAEO;AACL,4BAAI,CAAC7B,UAAL,CAAgB,UAAhB,gBAAmCgB,QAAQ,CAACW,KAA5C;AACD;AACF,mBAND;AAOD;AACF,eAbD,EAaG,UAACA,KAAD,EAAW;AACZ,sBAAI,CAAC5B,UAAL,GAAkB,KAAlB;AACD,eAfD;AAgBD,aAjBD,MAiBO;AACL,mBAAKJ,gBAAL,CAAsBoC,YAAtB,CAAmCZ,IAAnC,EAAyCJ,SAAzC,CAAmD,UAACC,QAAD,EAAc;AAC/D,sBAAI,CAACjB,UAAL,GAAkB,KAAlB;;AACA,oBAAIiB,QAAQ,CAACC,OAAb,EAAsB;AACpB,wBAAI,CAACzB,MAAL,CAAY4B,aAAZ,CAA0B,oBAA1B;AACD,iBAFD,MAEO;AACLJ,0BAAQ,CAACW,KAAT,CAAeC,GAAf,CAAmB,UAAAC,GAAG,EAAI;AACxB,wBAAIA,GAAG,CAACC,cAAJ,CAAmB,iBAAnB,CAAJ,EAA2C;AACzC,4BAAI,CAAC9B,UAAL,CAAgB,iBAAhB,IAAqC6B,GAAG,CAAC,iBAAD,CAAxC;AACD,qBAFD,MAEO;AACL,4BAAI,CAAC7B,UAAL,CAAgB,UAAhB,gBAAmCgB,QAAQ,CAACW,KAA5C;AACD;AACF,mBAND;AAOD;AACF,eAbD,EAaG,UAACA,KAAD,EAAW;AACZ,sBAAI,CAAC5B,UAAL,GAAkB,KAAlB;AACD,eAfD;AAgBD;AACF;AACF;AAlG+B;;AAAA;AAAA,OAAlC;;;;cAgBoB;;cACQ;;cACZ;;cACc;;cACH;;;;AApBdR,yBAAqB,6DAJjC,gEAAU;AACTyC,cAAQ,EAAE,oBADD;AAETC,cAAQ,EAAR;AAAA;AAAA;AAFS,KAAV,CAIiC,GAArB1C,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,QAAa2C,sBAAsB;AAAA;AAAA;AAgBjC,sCACUC,iBADV,EAEUxC,gBAFV,EAE4C;AAAA;;AADlC,aAAAwC,iBAAA,GAAAA,iBAAA;AACA,aAAAxC,gBAAA,GAAAA,gBAAA;AAhBV,aAAAE,SAAA,GAAY,mBAAZ;AAGA,aAAAuC,QAAA,GAAW,KAAX;AACA,aAAAtC,YAAA,GAAe,IAAf;AACA,aAAAuC,WAAA,GAA0B,EAA1B;AACA,aAAAC,UAAA,GAAkB,IAAlB;AACA,aAAAC,UAAA,GAAkB,IAAlB;AACA,aAAAC,WAAA,GAAmB,CAAnB;AACA,aAAAC,gBAAA,GAAwB,IAAxB;AACA,aAAAC,cAAA,GAA0B,KAA1B,CAM4C,CAL5C;;AACA,aAAAC,UAAA,GAAyB,EAAzB;AAKK;;AAnB4B;AAAA;AAAA,mCAqBtB;AACT;AACA;AACA;AACA,eAAKP,QAAL,GAAgB,KAAhB;AACA,eAAKQ,aAAL;AACA,eAAKC,UAAL;AACD;AA5BgC;AAAA;AAAA,wCA6BjB;AACd,eAAKF,UAAL,CAAgBG,IAAhB,CACE,IAAI,0FAAJ,CAAc;AACZC,iBAAK,EAAE,iBADK;AAEZC,eAAG,EAAE;AAFO,WAAd,CADF,EAKE,IAAI,0FAAJ,CAAc;AACZD,iBAAK,EAAE,iBADK;AAEZC,eAAG,EAAE;AAFO,WAAd,CALF;AAUA,cAAIC,OAAO,GAAG,IAAd;AACA,cAAIC,SAAS,GAAG,IAAhB;AAEA,cAAIC,OAAO,GAAG,EAAd;;AACA,cAAIF,OAAJ,EAAa;AACXE,mBAAO,CAAC,MAAD,CAAP,GAAkB;AAChBC,kBAAI,EAAE,0BADU;AAEhBC,gBAAE,EAAE;AAFY,aAAlB;AAID;;AACD,cAAIH,SAAJ,EAAe;AACbC,mBAAO,CAAC,QAAD,CAAP,GAAoB;AAClBC,kBAAI,EAAE,aADY;AAElBC,gBAAE,EAAE;AAFc,aAApB;AAID;;AACD,cAAIC,WAAW,GAAG,IAAI,4FAAJ,CAAgBH,OAAhB,CAAlB;AACA,eAAKR,UAAL,CAAgBG,IAAhB,CACEQ,WADF;AAGD;AA5DgC;AAAA;AAAA,qCA8DpB;AAAA;;AACX,cAAMC,MAAM,GAAQ;AAAEC,gBAAI,EAAE,KAAKhB;AAAb,WAApB;;AACA,cAAI,KAAKD,UAAT,EAAqB;AACnBgB,kBAAM,CAACE,MAAP,GAAgB,KAAKlB,UAArB;AACD;;AACD,eAAK5C,gBAAL,CAAsB+D,gBAAtB,CAAuCH,MAAvC,EAA+CxC,SAA/C,CAAyD,UAACC,QAAD,EAAc;AACrE,kBAAI,CAAClB,YAAL,GAAoB,KAApB;;AACA,gBAAIkB,QAAQ,CAACC,OAAb,EAAsB;AAEpB,oBAAI,CAACoB,WAAL,GAAmBrB,QAAQ,CAACG,IAAT,CAAcwC,IAAjC;AACA,oBAAI,CAACjB,cAAL,GAAsB,IAAtB;AACA,oBAAI,CAACJ,UAAL,GAAkB,MAAI,CAACH,iBAAL,CAAuByB,QAAvB,CAAgC5C,QAAQ,CAACG,IAAT,CAAcmB,UAAd,CAAyB,YAAzB,CAAhC,EAAwE,MAAI,CAACE,WAA7E,CAAlB;AACD,aALD,MAKO;AACL,oBAAI,CAACH,WAAL,GAAmB,EAAnB;AACA,oBAAI,CAACC,UAAL,GAAkB,IAAlB;AACD;AACF,WAXD,EAWG,UAACX,KAAD,EAAW;AACZ,kBAAI,CAAC7B,YAAL,GAAoB,KAApB;AACA,kBAAI,CAACuC,WAAL,GAAmB,EAAnB;AACA,kBAAI,CAACC,UAAL,GAAkB,IAAlB;AACD,WAfD;AAgBD;AAnFgC;AAAA;AAAA,gCAqFzBkB,IArFyB,EAqFX;AACpB,eAAKhB,WAAL,GAAmBgB,IAAnB;AACA,eAAKX,UAAL;AACD;AAxFgC;AAAA;AAAA,qCA0FpBgB,IA1FoB,EA0Fd;AACjB,eAAKtB,UAAL,GAAkBsB,IAAlB;AACA,eAAKrB,WAAL,GAAmB,CAAnB;AACA,eAAKK,UAAL;AACD;AA9FgC;AAAA;AAAA,wCA+FjB;AACd,eAAKA,UAAL;AACD;AAjGgC;;AAAA;AAAA,OAAnC;;;;cAiB+B;;cACD;;;;AAlBjBX,0BAAsB,6DAJlC,gEAAU;AACTF,cAAQ,EAAE,qBADD;AAETC,cAAQ,EAAR;AAAA;AAAA;AAFS,KAAV,CAIkC,GAAtBC,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,QAAM4B,MAAM,GAAW,CACrB;AACEV,UAAI,EAAE,EADR;AAEEW,eAAS,EAAE,kGAFb;AAGE5C,UAAI,EAAE;AAAE6C,aAAK,EAAE;AAAT;AAHR,KADqB,EAMrB;AACEZ,UAAI,EAAE,KADR;AAEEW,eAAS,EAAE,+FAFb;AAGE5C,UAAI,EAAE;AAAE6C,aAAK,EAAE;AAAT;AAHR,KANqB,EAWrB;AACEZ,UAAI,EAAE,UADR;AAEEW,eAAS,EAAE,+FAFb;AAGE5C,UAAI,EAAE;AAAE6C,aAAK,EAAE;AAAT;AAHR,KAXqB,CAAvB;;AAkCA,QAAaC,eAAe;AAAA;AAAA,KAA5B;;AAAaA,mBAAe,6DAf3B,+DAAS;AACRC,kBAAY,EAAE,CAAC,kGAAD,EAAyB,+FAAzB,CADN;AAERC,aAAO,EAAE,CACP,4DADO,EAEP,6DAAaC,QAAb,CAAsBN,MAAtB,CAFO,EAGP,kGAHO,EAIP,uFAJO,EAKP,yFALO,EAMP,0DANO,EAOP,kEAPO,EAQP,0GARO,EASP,oGATO,EAUP,yEAVO,CAFD;AAaLO,eAAS,EAAE,CAAC,oFAAD;AAbN,KAAT,CAe2B,GAAfJ,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3Cb,QAAaK,gBAAgB;AAAA;AAAA;AAI3B,gCACUC,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAHV,aAAAC,OAAA,GAAkB,yEAAYC,WAA9B;AAIK;;AANsB;AAAA;AAAA,yCAQVC,KARU,EAQL;AACpB,iBAAO,KAAKH,IAAL,CAAUhE,GAAV,WAAiB,KAAKiE,OAAtB,kBAA4C;AAAEjB,kBAAM,EAAEmB;AAAV,WAA5C,CAAP;AACD;AAV0B;AAAA;AAAA,qCAYdvD,IAZc,EAYV;AACf,iBAAO,KAAKoD,IAAL,CAAUI,IAAV,WAAkB,KAAKH,OAAvB,kBAA6CrD,IAA7C,CAAP;AACD;AAd0B;AAAA;AAAA,sCAgBbkC,EAhBa,EAgBTlC,IAhBS,EAgBL;AACpB,iBAAO,KAAKoD,IAAL,CAAUK,GAAV,WAAiB,KAAKJ,OAAtB,yBAA4CnB,EAA5C,GAAkDlC,IAAlD,CAAP;AACD;AAlB0B;AAAA;AAAA,yCAoBVkC,EApBU,EAoBM;AAAA,cAAZqB,KAAY,uEAAJ,IAAI;AAC/B,iBAAO,KAAKH,IAAL,CAAUhE,GAAV,WAAiB,KAAKiE,OAAtB,yBAA4CnB,EAA5C,GAAkD;AAAEE,kBAAM,EAAEmB;AAAV,WAAlD,CAAP;AACD;AAtB0B;;AAAA;AAAA,OAA7B;;;;cAKkB;;;;AALLJ,oBAAgB,6DAD5B,kEAC4B,GAAhBA,gBAAgB,CAAhB","file":"order-type-order-type-module-es5.js","sourcesContent":["export default \"<div class=\\\"side-container\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h2 class=\\\"mr-auto\\\">{{ isEditing ? 'Update' : 'Create' }} {{PageTitle}}</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div>\\r\\n          <div class=\\\"form-group row align-items-center\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3 mb-0\\\">\\r\\n              Order Type Name <em>*</em></label>\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <input [formControl]=\\\"addForm.controls['order_type_name']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row align-items-center\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3 mb-0\\\">Order Type Code <em>*</em></label>\\r\\n            <div class=\\\"col-md-5\\\" [ngClass]=\\\"{'has-error': formErrors.order_type_code}\\\">\\r\\n              <input [formControl]=\\\"addForm.controls['order_type_code']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"\\\">\\r\\n              <span *ngIf=\\\"formErrors.order_type_code\\\" class=\\\"help-block\\\"\\r\\n                [innerHTML]=\\\"formErrors.order_type_code\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right border-top pt-4 mt-5 card-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" routerLink=\\\"/manage/order-type\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\"\\r\\n          [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\" [disabled]=\\\"showLoader\\\">Submit</button>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"side-container\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div class=\\\"row m-0\\\">\\r\\n      <h2 class=\\\"mr-auto\\\">{{PageTitle}}</h2>\\r\\n      <div class=\\\"ml-3\\\">\\r\\n        <search-box (text)=\\\"searchObject($event)\\\" [placeholder]=\\\"'Search Here...'\\\"></search-box>\\r\\n      </div>\\r\\n      <div class=\\\"ml-3\\\">\\r\\n        <app-btn-add [btnName]=\\\"'Add Order Type'\\\" [editData]=\\\"'/manage/order-type/add'\\\"></app-btn-add>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <app-table-list [headerData]=\\\"headerData\\\" [rawData]=\\\"objectArray\\\" (reloadEvent)=\\\"onReloadEvent()\\\">\\r\\n      </app-table-list>\\r\\n      <pagination *ngIf=\\\"showPagination\\\" [paginationList]=\\\"pagination\\\" [currentPage]=\\\"currentPage\\\"\\r\\n        (onPageChange)=\\\"getPage($event)\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonService } from 'src/app/service/common.service';\r\nimport { OrderTypeService } from 'src/app/service/order-type.service';\r\ndeclare var document: any;\r\n\r\n@Component({\r\n  selector: 'app-add-order-type',\r\n  templateUrl: './add-order-type.component.html'\r\n})\r\nexport class AddOrderTypeComponent implements OnInit {\r\n\r\n  PageTitle = \"Order Type\"\r\n\r\n  loadingState = false;\r\n  addForm: FormGroup;\r\n\r\n  showLoader = false;\r\n  formErrors = {\r\n    order_type_code: null,\r\n    apierror: null,\r\n  };\r\n  isEditing = false;\r\n  editId = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private ordertypeService: OrderTypeService,\r\n    private commonservice: CommonService\r\n  ) {\r\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\r\n      this.isEditing = true;\r\n      this.editId = this.activatedRoute.snapshot.paramMap.get('id');\r\n    }\r\n\r\n    this.addForm = this.fb.group({\r\n      order_type_name: [null, Validators.compose([Validators.required])],\r\n      order_type_code: [null, Validators.compose([Validators.required])],\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.isEditing) {\r\n      this.getEditObject()\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  getEditObject() {\r\n    this.ordertypeService.getOrderTypeById(this.editId).subscribe((response) => {\r\n      if (response.success) {\r\n        this.addForm.patchValue(response.data);\r\n      } else {\r\n        this.router.navigateByUrl('/manage/order-type');\r\n      }\r\n    });\r\n  }\r\n\r\n  submitForm(formData: any): void {\r\n    if (formData.valid) {\r\n      this.showLoader = true;\r\n      const data = new FormData();\r\n      data.append('order_type_name', formData.value.order_type_name);\r\n      data.append('order_type_code', formData.value.order_type_code);\r\n\r\n      if (this.isEditing) {\r\n        this.ordertypeService.editOrderType(this.editId, data).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response.success) {\r\n            this.router.navigateByUrl('/manage/order-type');\r\n          } else {\r\n            response.error.map(obj => {\r\n              if (obj.hasOwnProperty('order_type_code')) {\r\n                this.formErrors['order_type_code'] = obj['order_type_code'];\r\n              } else {\r\n                this.formErrors['apierror'] = `* ${response.error}`;\r\n              }\r\n            });\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      } else {\r\n        this.ordertypeService.addOrderType(data).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response.success) {\r\n            this.router.navigateByUrl('/manage/order-type');\r\n          } else {\r\n            response.error.map(obj => {\r\n              if (obj.hasOwnProperty('order_type_code')) {\r\n                this.formErrors['order_type_code'] = obj['order_type_code'];\r\n              } else {\r\n                this.formErrors['apierror'] = `* ${response.error}`;\r\n              }\r\n            });\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { TextField, ActionField } from 'src/app/common-module/table-list/list-field-type';\r\nimport { OrderTypeService } from 'src/app/service/order-type.service';\r\n\r\n@Component({\r\n  selector: 'app-order-type-list',\r\n  templateUrl: './order-type-list.component.html'\r\n})\r\nexport class OrderTypeListComponent implements OnInit {\r\n\r\n  PageTitle = \"Manage Order Type\";\r\n\r\n  action: any;\r\n  loadform = false;\r\n  loadingState = true;\r\n  objectArray: Array<any> = [];\r\n  pagination: any = null;\r\n  searchText: any = null;\r\n  currentPage: any = 1;\r\n  permissionObject: any = null;\r\n  showPagination: boolean = false;\r\n  //For Dynamic List\r\n  headerData: Array<any> = [];\r\n\r\n  constructor(\r\n    private paginationService: PaginationService,\r\n    private ordertypeService: OrderTypeService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.dataService.permission.subscribe((perms) => {\r\n    //   this.permissionObject = perms['self'];\r\n    // });\r\n    this.loadform = false;\r\n    this.setHeaderData();\r\n    this.getObjects();\r\n  }\r\n  setHeaderData() {\r\n    this.headerData.push(\r\n      new TextField({\r\n        label: \"Order Type Name\",\r\n        key: \"order_type_name\",\r\n      }),\r\n      new TextField({\r\n        label: \"Order Type Code\",\r\n        key: \"order_type_code\",\r\n      })\r\n    );\r\n    let canEdit = true;\r\n    let canDelete = true;\r\n\r\n    let actions = {};\r\n    if (canEdit) {\r\n      actions['edit'] = {\r\n        path: '/manage/order-type/edit/',\r\n        id: 'order_type_id'\r\n      }\r\n    }\r\n    if (canDelete) {\r\n      actions['delete'] = {\r\n        path: 'order_type/',\r\n        id: 'order_type_id'\r\n      }\r\n    }\r\n    let actionColom = new ActionField(actions);\r\n    this.headerData.push(\r\n      actionColom\r\n    );\r\n  }\r\n\r\n  getObjects() {\r\n    const params: any = { page: this.currentPage };\r\n    if (this.searchText) {\r\n      params.search = this.searchText;\r\n    }\r\n    this.ordertypeService.getOrderTypeList(params).subscribe((response) => {\r\n      this.loadingState = false;\r\n      if (response.success) {\r\n\r\n        this.objectArray = response.data.list;\r\n        this.showPagination = true;\r\n        this.pagination = this.paginationService.getPager(response.data.pagination['total_page'], this.currentPage);\r\n      } else {\r\n        this.objectArray = [];\r\n        this.pagination = null;\r\n      }\r\n    }, (error) => {\r\n      this.loadingState = false;\r\n      this.objectArray = [];\r\n      this.pagination = null;\r\n    });\r\n  }\r\n\r\n  getPage(page: number) {\r\n    this.currentPage = page;\r\n    this.getObjects();\r\n  }\r\n\r\n  searchObject(text) {\r\n    this.searchText = text;\r\n    this.currentPage = 1;\r\n    this.getObjects();\r\n  }\r\n  onReloadEvent() {\r\n    this.getObjects();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SearchModule } from 'src/app/common-module/search/search.module';\r\nimport { BtnAddModule } from 'src/app/common-module/btn-add/btn-add.module';\r\nimport { TableListModule } from 'src/app/common-module/table-list/table-list.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { PaginationModule } from 'src/app/common-module/pagination/pagination.module';\r\nimport { OrderTypeListComponent } from './order-type-list/order-type-list.component';\r\nimport { AddOrderTypeComponent } from './add-order-type/add-order-type.component';\r\nimport { OrderTypeService } from 'src/app/service/order-type.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: OrderTypeListComponent,\r\n    data: { title: 'order_type_list' }\r\n  },\r\n  {\r\n    path: \"add\",\r\n    component: AddOrderTypeComponent,\r\n    data: { title: 'add_order_type' }\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: AddOrderTypeComponent,\r\n    data: { title: 'edit_order_type' }\r\n  },\r\n\r\n]\r\n\r\n@NgModule({\r\n  declarations: [OrderTypeListComponent, AddOrderTypeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    TableListModule,\r\n    SearchModule,\r\n    BtnAddModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    PaginationModule,\r\n    SharedModule,\r\n  ], providers: [OrderTypeService]\r\n})\r\nexport class OrderTypeModule { }\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class OrderTypeService {\r\n\r\n  API_URL: string = environment.APIEndpoint;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  getOrderTypeList(param): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/order_type`, { params: param });\r\n  }\r\n\r\n  addOrderType(data): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/order_type`, data);\r\n  }\r\n\r\n  editOrderType(id, data): Observable<any> {\r\n    return this.http.put(`${this.API_URL}/order_type/${id}`, data);\r\n  }\r\n\r\n  getOrderTypeById(id, param = null): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/order_type/${id}`, { params: param });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]}