{"version":3,"sources":["webpack:///src/app/pages/inbound/product-config/product-config-add/product-config-add.component.html","webpack:///src/app/pages/inbound/product-config/product-config-add/product-config-add.component.ts","webpack:///src/app/pages/inbound/product-config/product-config-add/product-config-add.module.ts"],"names":["ProductConfigAddComponent","router","activatedRoute","fb","location","productconfigService","PageTitle","addNewRadio","loadingState","registrationTypeArray","serialArray","isSerialShow","showLoader","formErrors","apierror","isEditing","editId","addForm","group","order_id","compose","required","maintain_serial_no","product_id","registration_type","snapshot","paramMap","get","id","getEditObject","getMasterData","value","setValidators","updateValueAndValidity","clearValidators","event","patchValue","params","is_editing","getProductConfigMasterData","subscribe","response","success","data","serial","productListArray","product","orderListArray","order","console","log","sku_no","unload_id","unload_detail_id","received_qty","getProductConfigById","typeChange","formData","valid","FormData","append","editProductConfig","back","error","addProductConfig","selector","template","routes","path","component","ProductConfigAddModule","declarations","imports","forChild","providers"],"mappings":"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","file":"product-config-add-product-config-add-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"page-header border-b\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h2 class=\\\"mr-auto\\\">{{ isEditing ? 'Update' : 'Create' }} {{PageTitle}}</h2>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n            <div class=\\\"card-body\\\">\\n                <div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Order Id</label>\\n                        <div class=\\\"col-md-5\\\">\\n\\n                            <ng-select [formControl]=\\\"addForm.controls['order_id']\\\" (change)=\\\"getMasterData(true)\\\"\\n                                    [items]=\\\"orderListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\"\\n                                    placeholder=\\\"Select Order\\\">\\n                                </ng-select>\\n                                \\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Product <em>*</em></label>\\n                        <div class=\\\"col-md-5\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['product_id']\\\"\\n                                (change)=\\\"setProductDetail($event)\\\" [items]=\\\"productListArray\\\" bindLabel=\\\"label\\\"\\n                                bindValue=\\\"value\\\" placeholder=\\\"Select Product\\\">\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Registration Type\\n                            <em>*</em></label>\\n                        <div class=\\\"col-md-5\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['registration_type']\\\"\\n                                [items]=\\\"registrationTypeArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\"\\n                                (change)=\\\"typeChange()\\\" placeholder=\\\"Select Registration\\\">\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"isSerialShow\\\" class=\\\"form-group row\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Serial Number <em>*</em></label>\\n                        <div class=\\\"col-md-5\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['maintain_serial_no']\\\" [items]=\\\"serialArray\\\"\\n                                bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Serial\\\">\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ProductConfigService } from 'src/app/service/product-config.service';\n\n@Component({\n  selector: 'app-product-config-add',\n  templateUrl: './product-config-add.component.html'\n})\nexport class ProductConfigAddComponent implements OnInit {\n\n  PageTitle = \"Product Cofiguration\"\n\n  addNewRadio: boolean = false\n  loadingState = false;\n  addForm: FormGroup;\n  registrationTypeArray: any = [];\n  serialArray: any = [];\n  isSerialShow = false;\n  showLoader = false;\n  formErrors = {\n    apierror: null,\n  };\n  isEditing = false;\n  editId = null;\n  orderListArray: any;\n  productListArray: any;\n\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private location: Location,\n    private productconfigService: ProductConfigService,\n  ) {\n    this.addForm = this.fb.group({\n      order_id: [null, Validators.compose([Validators.required])],\n      maintain_serial_no: [null],\n      product_id: [null, Validators.compose([Validators.required])],\n      registration_type: [null, Validators.compose([Validators.required])],\n    });\n\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\n      let id = this.activatedRoute.snapshot.paramMap.get('id');\n      this.editId = id;\n      this.isEditing = true;\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEditing) {\n      this.getEditObject()\n    } else { this.getMasterData(); }\n  }\n\n  typeChange() {\n    if (this.addForm.value.registration_type == 0) {\n      this.isSerialShow = true;\n      this.addForm.get('maintain_serial_no').setValidators(Validators.compose([Validators.required]));\n      this.addForm.get('maintain_serial_no').updateValueAndValidity();\n    } else {\n      this.isSerialShow = false;\n      this.addForm.get('maintain_serial_no').clearValidators();\n      this.addForm.get('maintain_serial_no').updateValueAndValidity();\n    }\n  }\n\n  getMasterData(event = null) {\n    event ? this.addForm.patchValue({ product_id: '' }) : '';\n    const params: any = {};\n    if (this.addForm.value.order_id) {\n      params.order_id = this.addForm.value.order_id;\n    }\n    if (this.isEditing) {\n      params.is_editing = this.isEditing;\n    }\n    this.productconfigService.getProductConfigMasterData(params).subscribe((response) => {\n      if (response.success) {\n        if (this.addForm.value.order_id) {\n          if (this.isEditing) {\n            this.registrationTypeArray = response.data.registration_type;\n            this.serialArray = response.data.serial;\n            this.productListArray = response.data.product;\n          } else {\n            this.productListArray = response.data.product;\n          }\n        } else {\n          this.orderListArray = response.data.order;\n          this.registrationTypeArray = response.data.registration_type;\n          this.serialArray = response.data.serial;\n        }\n      }\n    });\n  }\n\n  setProductDetail(data) {\n    if (data) {\n      console.log(data);\n      // console.log(this.productListArray[this.addForm.value.product_id]);\n      this.addForm.patchValue({\n        sku_no: data.sku_no,\n        product_id: data.value,\n        unload_id: data.unload_id,\n        unload_detail_id: data.unload_detail_id,\n        received_qty: data.received_qty\n      });\n    }\n  }\n\n\n  getEditObject() {\n\n    this.productconfigService.getProductConfigById(this.editId).subscribe((response) => {\n      if (response.success) {\n        this.orderListArray = [response.data.order];\n\n        this.addForm.patchValue({\n          order_id: response.data.order.value,\n          product_id: response.data.product.value,\n          registration_type: response.data.registration_type.value,\n        });\n        if (response.data.registration_type.value == 0) {\n          this.isSerialShow = true;\n          this.addForm.patchValue({\n            maintain_serial_no: response.data.serial.value,\n          });\n        }\n        this.typeChange();\n        this.getMasterData();\n      } else {\n        // this.router.navigateByUrl('/inbound/registeration');\n      }\n    });\n  }\n\n\n\n  submitForm(formData: any): void {\n    if (formData.valid) {\n      this.showLoader = true;\n      const data = new FormData();\n      data.append('registration_type', formData.value.registration_type);\n      data.append('order_id', formData.value.order_id);\n      data.append('product_id', formData.value.product_id);\n      if (this.isSerialShow) { data.append('maintain_serial_no', formData.value.maintain_serial_no); }\n      if (this.isEditing) {\n        this.productconfigService.editProductConfig(this.editId, data).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.back();\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      } else {\n        this.productconfigService.addProductConfig(data).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.back();\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      }\n    }\n  }\n  back() {\n    this.location.back();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ProductConfigAddComponent } from './product-config-add.component';\nimport { ProductConfigService } from 'src/app/service/product-config.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductConfigAddComponent\n  }\n]\n\n@NgModule({\n  declarations: [ProductConfigAddComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormValidationModule,\n    NgSelectModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ], providers: [ProductConfigService]\n})\n\nexport class ProductConfigAddModule { }\n\n\n"]}