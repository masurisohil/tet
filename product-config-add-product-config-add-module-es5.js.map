{"version":3,"sources":["webpack:///src/app/pages/inbound/product-config/product-config-add/product-config-add.component.html","webpack:///src/app/shared/form-validation/control-error/control-error.component.html","webpack:///src/app/pages/inbound/product-config/product-config-add/product-config-add.component.ts","webpack:///src/app/pages/inbound/product-config/product-config-add/product-config-add.module.ts","webpack:///src/app/shared/form-validation/control-error/control-error.component.ts","webpack:///src/app/shared/form-validation/directive/control-error-container.directive.ts","webpack:///src/app/shared/form-validation/directive/control-errors.directive.ts","webpack:///src/app/shared/form-validation/directive/form-submit.directive.ts","webpack:///src/app/shared/form-validation/form-errors.ts","webpack:///src/app/shared/form-validation/form-validation.module.ts"],"names":["ProductConfigAddComponent","router","activatedRoute","fb","location","productconfigService","PageTitle","addNewRadio","loadingState","registrationTypeArray","serialArray","isSerialShow","showLoader","formErrors","apierror","isEditing","editId","addForm","group","order_id","compose","required","maintain_serial_no","product_id","registration_type","snapshot","paramMap","get","id","getEditObject","getMasterData","value","setValidators","updateValueAndValidity","clearValidators","event","patchValue","params","is_editing","getProductConfigMasterData","subscribe","response","success","data","serial","productListArray","product","orderListArray","order","sku_no","unload_id","unload_detail_id","received_qty","getProductConfigById","typeChange","formData","valid","FormData","append","editProductConfig","back","error","addProductConfig","selector","template","routes","path","component","ProductConfigAddModule","declarations","imports","forChild","providers","ControlErrorComponent","cdr","_hide","_text","detectChanges","changeDetection","OnPush","ControlErrorContainerDirective","vcr","ControlErrorsDirective","resolver","controlErrorContainer","form","controlDir","customErrors","container","submit$","control","valueChanges","v","controlErrors","errors","control_name","getFormControlName","firstKey","Object","keys","messages","undefined","setError","ref","c","formGroup","parent","controls","find","name","text","factory","resolveComponentFactory","createComponent","instance","FormSubmitDirective","host","element","pipe","classList","contains","add","nativeElement","VALIDATION_MESSAGES","first_name","last_name","email","validateEmail","phone_number","minlength","maxlength","password","pattern","confirm_password","validatePassword","login_pin","number_tag_to_create","max","min","FormValidationModule","exports","entryComponents"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaA,yBAAyB;AAAA;AAAA;AAoBpC,yCACUC,MADV,EAEUC,cAFV,EAGUC,EAHV,EAIUC,QAJV,EAKUC,oBALV,EAKoD;AAAA;;AAJ1C,aAAAJ,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,oBAAA,GAAAA,oBAAA;AAvBV,aAAAC,SAAA,GAAY,sBAAZ;AAEA,aAAAC,WAAA,GAAuB,KAAvB;AACA,aAAAC,YAAA,GAAe,KAAf;AAEA,aAAAC,qBAAA,GAA6B,EAA7B;AACA,aAAAC,WAAA,GAAmB,EAAnB;AACA,aAAAC,YAAA,GAAe,KAAf;AACA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,UAAA,GAAa;AACXC,kBAAQ,EAAE;AADC,SAAb;AAGA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,MAAA,GAAS,IAAT;AAYE,aAAKC,OAAL,GAAe,KAAKd,EAAL,CAAQe,KAAR,CAAc;AAC3BC,kBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAWC,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CADiB;AAE3BC,4BAAkB,EAAE,CAAC,IAAD,CAFO;AAG3BC,oBAAU,EAAE,CAAC,IAAD,EAAO,0DAAWH,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP,CAHe;AAI3BG,2BAAiB,EAAE,CAAC,IAAD,EAAO,0DAAWJ,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP;AAJQ,SAAd,CAAf;;AAOA,YAAI,KAAKnB,cAAL,CAAoBuB,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAAJ,EAAqD;AACnD,cAAIC,EAAE,GAAG,KAAK1B,cAAL,CAAoBuB,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAAT;AACA,eAAKX,MAAL,GAAcY,EAAd;AACA,eAAKb,SAAL,GAAiB,IAAjB;AACD;AACF;;AAvCmC;AAAA;AAAA,mCAyCzB;AACT,cAAI,KAAKA,SAAT,EAAoB;AAClB,iBAAKc,aAAL;AACD,WAFD,MAEO;AAAE,iBAAKC,aAAL;AAAuB;AACjC;AA7CmC;AAAA;AAAA,qCA+CvB;AACX,cAAI,KAAKb,OAAL,CAAac,KAAb,CAAmBP,iBAAnB,IAAwC,CAA5C,EAA+C;AAC7C,iBAAKb,YAAL,GAAoB,IAApB;AACA,iBAAKM,OAAL,CAAaU,GAAb,CAAiB,oBAAjB,EAAuCK,aAAvC,CAAqD,0DAAWZ,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAArD;AACA,iBAAKJ,OAAL,CAAaU,GAAb,CAAiB,oBAAjB,EAAuCM,sBAAvC;AACD,WAJD,MAIO;AACL,iBAAKtB,YAAL,GAAoB,KAApB;AACA,iBAAKM,OAAL,CAAaU,GAAb,CAAiB,oBAAjB,EAAuCO,eAAvC;AACA,iBAAKjB,OAAL,CAAaU,GAAb,CAAiB,oBAAjB,EAAuCM,sBAAvC;AACD;AACF;AAzDmC;AAAA;AAAA,wCA2DR;AAAA;;AAAA,cAAdE,KAAc,uEAAN,IAAM;AAC1BA,eAAK,GAAG,KAAKlB,OAAL,CAAamB,UAAb,CAAwB;AAAEb,sBAAU,EAAE;AAAd,WAAxB,CAAH,GAAiD,EAAtD;AACA,cAAMc,MAAM,GAAQ,EAApB;;AACA,cAAI,KAAKpB,OAAL,CAAac,KAAb,CAAmBZ,QAAvB,EAAiC;AAC/BkB,kBAAM,CAAClB,QAAP,GAAkB,KAAKF,OAAL,CAAac,KAAb,CAAmBZ,QAArC;AACD;;AACD,cAAI,KAAKJ,SAAT,EAAoB;AAClBsB,kBAAM,CAACC,UAAP,GAAoB,KAAKvB,SAAzB;AACD;;AACD,eAAKV,oBAAL,CAA0BkC,0BAA1B,CAAqDF,MAArD,EAA6DG,SAA7D,CAAuE,UAACC,QAAD,EAAc;AACnF,gBAAIA,QAAQ,CAACC,OAAb,EAAsB;AACpB,kBAAI,KAAI,CAACzB,OAAL,CAAac,KAAb,CAAmBZ,QAAvB,EAAiC;AAC/B,oBAAI,KAAI,CAACJ,SAAT,EAAoB;AAClB,uBAAI,CAACN,qBAAL,GAA6BgC,QAAQ,CAACE,IAAT,CAAcnB,iBAA3C;AACA,uBAAI,CAACd,WAAL,GAAmB+B,QAAQ,CAACE,IAAT,CAAcC,MAAjC;AACA,uBAAI,CAACC,gBAAL,GAAwBJ,QAAQ,CAACE,IAAT,CAAcG,OAAtC;AACD,iBAJD,MAIO;AACL,uBAAI,CAACD,gBAAL,GAAwBJ,QAAQ,CAACE,IAAT,CAAcG,OAAtC;AACD;AACF,eARD,MAQO;AACL,qBAAI,CAACC,cAAL,GAAsBN,QAAQ,CAACE,IAAT,CAAcK,KAApC;AACA,qBAAI,CAACvC,qBAAL,GAA6BgC,QAAQ,CAACE,IAAT,CAAcnB,iBAA3C;AACA,qBAAI,CAACd,WAAL,GAAmB+B,QAAQ,CAACE,IAAT,CAAcC,MAAjC;AACD;AACF;AACF,WAhBD;AAiBD;AArFmC;AAAA;AAAA,yCAuFnBD,IAvFmB,EAuFb;AACrB,cAAIA,IAAJ,EAAU;AACR,iBAAK1B,OAAL,CAAamB,UAAb,CAAwB;AACtBa,oBAAM,EAAEN,IAAI,CAACM,MADS;AAEtB1B,wBAAU,EAAEoB,IAAI,CAACZ,KAFK;AAGtBmB,uBAAS,EAAEP,IAAI,CAACO,SAHM;AAItBC,8BAAgB,EAAER,IAAI,CAACQ,gBAJD;AAKtBC,0BAAY,EAAET,IAAI,CAACS;AALG,aAAxB;AAOD;AACF;AAjGmC;AAAA;AAAA,wCAoGpB;AAAA;;AAEd,eAAK/C,oBAAL,CAA0BgD,oBAA1B,CAA+C,KAAKrC,MAApD,EAA4DwB,SAA5D,CAAsE,UAACC,QAAD,EAAc;AAClF,gBAAIA,QAAQ,CAACC,OAAb,EAAsB;AACpB,oBAAI,CAACK,cAAL,GAAsB,CAACN,QAAQ,CAACE,IAAT,CAAcK,KAAf,CAAtB;;AAEA,oBAAI,CAAC/B,OAAL,CAAamB,UAAb,CAAwB;AACtBjB,wBAAQ,EAAEsB,QAAQ,CAACE,IAAT,CAAcK,KAAd,CAAoBjB,KADR;AAEtBR,0BAAU,EAAEkB,QAAQ,CAACE,IAAT,CAAcG,OAAd,CAAsBf,KAFZ;AAGtBP,iCAAiB,EAAEiB,QAAQ,CAACE,IAAT,CAAcnB,iBAAd,CAAgCO;AAH7B,eAAxB;;AAKA,kBAAIU,QAAQ,CAACE,IAAT,CAAcnB,iBAAd,CAAgCO,KAAhC,IAAyC,CAA7C,EAAgD;AAC9C,sBAAI,CAACpB,YAAL,GAAoB,IAApB;;AACA,sBAAI,CAACM,OAAL,CAAamB,UAAb,CAAwB;AACtBd,oCAAkB,EAAEmB,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBb;AADnB,iBAAxB;AAGD;;AACD,oBAAI,CAACuB,UAAL;;AACA,oBAAI,CAACxB,aAAL;AACD,aAhBD,MAgBO,CACL;AACD;AACF,WApBD;AAqBD;AA3HmC;AAAA;AAAA,mCA+HzByB,QA/HyB,EA+HZ;AAAA;;AACtB,cAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB,iBAAK5C,UAAL,GAAkB,IAAlB;AACA,gBAAM+B,IAAI,GAAG,IAAIc,QAAJ,EAAb;AACAd,gBAAI,CAACe,MAAL,CAAY,mBAAZ,EAAiCH,QAAQ,CAACxB,KAAT,CAAeP,iBAAhD;AACAmB,gBAAI,CAACe,MAAL,CAAY,UAAZ,EAAwBH,QAAQ,CAACxB,KAAT,CAAeZ,QAAvC;AACAwB,gBAAI,CAACe,MAAL,CAAY,YAAZ,EAA0BH,QAAQ,CAACxB,KAAT,CAAeR,UAAzC;;AACA,gBAAI,KAAKZ,YAAT,EAAuB;AAAEgC,kBAAI,CAACe,MAAL,CAAY,oBAAZ,EAAkCH,QAAQ,CAACxB,KAAT,CAAeT,kBAAjD;AAAuE;;AAChG,gBAAI,KAAKP,SAAT,EAAoB;AAClB,mBAAKV,oBAAL,CAA0BsD,iBAA1B,CAA4C,KAAK3C,MAAjD,EAAyD2B,IAAzD,EAA+DH,SAA/D,CAAyE,UAACC,QAAD,EAAc;AACrF,sBAAI,CAAC7B,UAAL,GAAkB,KAAlB;;AACA,oBAAI6B,QAAQ,CAACC,OAAb,EAAsB;AACpB,wBAAI,CAACkB,IAAL;AACD;AACF,eALD,EAKG,UAACC,KAAD,EAAW;AACZ,sBAAI,CAACjD,UAAL,GAAkB,KAAlB;AACD,eAPD;AAQD,aATD,MASO;AACL,mBAAKP,oBAAL,CAA0ByD,gBAA1B,CAA2CnB,IAA3C,EAAiDH,SAAjD,CAA2D,UAACC,QAAD,EAAc;AACvE,sBAAI,CAAC7B,UAAL,GAAkB,KAAlB;;AACA,oBAAI6B,QAAQ,CAACC,OAAb,EAAsB;AACpB,wBAAI,CAACkB,IAAL;AACD;AACF,eALD,EAKG,UAACC,KAAD,EAAW;AACZ,sBAAI,CAACjD,UAAL,GAAkB,KAAlB;AACD,eAPD;AAQD;AACF;AACF;AA3JmC;AAAA;AAAA,+BA4J7B;AACL,eAAKR,QAAL,CAAcwD,IAAd;AACD;AA9JmC;;AAAA;AAAA,OAAtC;;;;cAqBoB;;cACQ;;cACZ;;cACM;;cACY;;;;AAzBrB5D,6BAAyB,6DAJrC,gEAAU;AACT+D,cAAQ,EAAE,wBADD;AAETC,cAAQ,EAAR;AAAA;AAAA;AAFS,KAAV,CAIqC,GAAzBhE,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAMiE,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAoBA,QAAaC,sBAAsB;AAAA;AAAA,KAAnC;;AAAaA,0BAAsB,6DAblC,+DAAS;AACRC,kBAAY,EAAE,CAAC,uFAAD,CADN;AAERC,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0GAJO,EAKP,mEALO,EAMP,yEANO,EAOP,6DAAaC,QAAb,CAAsBN,MAAtB,CAPO,CAFD;AAULO,eAAS,EAAE,CAAC,2FAAD;AAVN,KAAT,CAakC,GAAtBJ,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBb,QAAaK,qBAAqB;AAAA;AAAA;AAahC,qCAAoBC,GAApB,EAA4C;AAAA;;AAAxB,aAAAA,GAAA,GAAAA,GAAA;AAVpB,aAAAC,KAAA,GAAQ,IAAR;AAU+C;;AAbf;AAAA;AAAA,mCAerB,CACV;AAhB+B;AAAA;AAAA,0BAKd5C,KALc,EAKP;AACvB,cAAIA,KAAK,KAAK,KAAK6C,KAAnB,EAA0B;AACxB,iBAAKA,KAAL,GAAa7C,KAAb;AACA,iBAAK4C,KAAL,GAAa,CAAC5C,KAAd;AACA,iBAAK2C,GAAL,CAASG,aAAT;AACD;AACF;AAX+B;;AAAA;AAAA,OAAlC;;;;cAa2B;;;;AARhB,8DAAR,6DAAQ,G,+BAAA,E,MAAA,E,IAAA;AALEJ,yBAAqB,6DALjC,gEAAU;AACTV,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,mIAFS;AAGTc,qBAAe,EAAE,sEAAwBC;AAHhC,KAAV,CAKiC,GAArBN,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAaO,8BAA8B,GAEzC,wCAAmBC,GAAnB,EAA0C;AAAA;;AAAvB,WAAAA,GAAA,GAAAA,GAAA;AAA0B,KAF/C;;;;cAE0B;;;;AAFbD,kCAA8B,6DAH1C,gEAAU;AACTjB,cAAQ,EAAE;AADD,KAAV,CAG0C,GAA9BiB,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUb,QAAaE,sBAAsB;AAAA;AAAA;AAOjC,sCACUD,GADV,EAEUE,QAFV,EAGcC,qBAHd,EAI8BC,IAJ9B,EAKUC,UALV,EAKiC;AAAA;;AAJvB,aAAAL,GAAA,GAAAA,GAAA;AACA,aAAAE,QAAA,GAAAA,QAAA;AAEoB,aAAAE,IAAA,GAAAA,IAAA;AACpB,aAAAC,UAAA,GAAAA,UAAA;AAPD,aAAAC,YAAA,GAAe,EAAf;AAQP,aAAKC,SAAL,GAAiBJ,qBAAqB,GAAGA,qBAAqB,CAACH,GAAzB,GAA+BA,GAArE;AACA,aAAKQ,OAAL,GAAe,KAAKJ,IAAL,GAAY,KAAKA,IAAL,CAAUI,OAAtB,GAAgC,0CAA/C;AACD;;AAfgC;AAAA;AAAA,mCAiBtB;AAAA;;AACT,cAAI,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAaC,YAAjC,EAA+C;AAC7C,+DACE,KAAKD,OAAL,CAAaC,YADf,EAEE,KAAKF,OAFP,EAGEjD,SAHF,CAGY,UAACoD,CAAD,EAAO;AACjB,kBAAMC,aAAa,GAAG,MAAI,CAACH,OAAL,CAAaI,MAAnC;;AACA,kBAAID,aAAJ,EAAmB;AACjB,oBAAME,YAAY,GAAG,MAAI,CAACC,kBAAL,CAAwB,MAAI,CAACN,OAA7B,CAArB,CADiB,CAEjB;;;AACA,oBAAMO,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,aAAZ,EAA2B,CAA3B,CAAjB;AACA,oBAAMO,QAAQ,GAAG,iEAAoBL,YAApB,CAAjB;;AACA,oBAAIK,QAAQ,KAAKC,SAAb,IAA0BD,QAAQ,KAAK,IAAvC,IAA+CA,QAAQ,KAAK,EAAhE,EAAoE;AAClE,wBAAI,CAACE,QAAL,CAAcF,QAAQ,CAACH,QAAD,CAAtB;AACD;AACF,eARD,MAQO,IAAI,MAAI,CAACM,GAAT,EAAc;AACnB,sBAAI,CAACD,QAAL,CAAc,IAAd;AACD;AACF,aAhBD;AAiBD;AACF;AArCgC;AAAA;AAAA,2CAuCdE,CAvCc,EAuCI;AACnC,cAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,QAA3B;AACA,iBAAOT,MAAM,CAACC,IAAP,CAAYM,SAAZ,EAAuBG,IAAvB,CAA4B,UAAAC,IAAI;AAAA,mBAAIL,CAAC,KAAKC,SAAS,CAACI,IAAD,CAAnB;AAAA,WAAhC,KAA8D,IAArE;AACD;AA1CgC;AAAA;AAAA,iCAgDxBC,IAhDwB,EAgDV;AACrB,cAAI,CAAC,KAAKP,GAAV,EAAe;AACb,gBAAMQ,OAAO,GAAG,KAAK5B,QAAL,CAAc6B,uBAAd,CAAsC,4FAAtC,CAAhB;AACA,iBAAKT,GAAL,GAAW,KAAKf,SAAL,CAAeyB,eAAf,CAA+BF,OAA/B,CAAX;AACD;;AAED,eAAKR,GAAL,CAASW,QAAT,CAAkBJ,IAAlB,GAAyBA,IAAzB;AACD;AAvDgC;AAAA;AAAA,sCAyDnB,CAAG;AAzDgB;AAAA;AAAA,4BA4CnB;AACZ,iBAAO,KAAKxB,UAAL,CAAgBI,OAAvB;AACD;AA9CgC;;AAAA;AAAA,OAAnC;;;;cAQiB;;cACK;;cACiB,iG;AAA8B;AAAA,gBAAhE;AAAgE;;cAC/B,0E;AAAmB;AAAA,gBAApD;AAAoD,WAA5C;AAAA,gBAAI;AAAJ,SAA4C;;cACjC;;;;AAPb,8DAAR,6DAAQ,G,gCAAA,E,cAAA,E,MAAA;AALER,0BAAsB,6DAHlC,gEAAU;AACTnB,cAAQ,EAAE;AADD,KAAV,CAGkC,EAU9B,0HAV8B,EAW9B,0HAX8B,EAWlB,sHAXkB,GAAtBmB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPb,QAAaiC,mBAAmB;AAAA;AAAA;AAE9B,mCAAoBC,IAApB,EAAuD;AAAA;;AAAA;;AAAnC,aAAAA,IAAA,GAAAA,IAAA;AAEpB,aAAA3B,OAAA,GAAU,uDAAU,KAAK4B,OAAf,EAAwB,QAAxB,EAAkCC,IAAlC,CAAuC,2DAAI,YAAM;AACzD,cAAI,MAAI,CAACD,OAAL,CAAaE,SAAb,CAAuBC,QAAvB,CAAgC,WAAhC,MAAiD,KAArD,EAA4D;AAC1D,kBAAI,CAACH,OAAL,CAAaE,SAAb,CAAuBE,GAAvB,CAA2B,WAA3B;AACD;AACF,SAJgD,CAAvC,EAIN,mEAAY,CAAZ,CAJM,CAAV;AAF0D;;AAF5B;AAAA;AAAA,4BAUhB;AACZ,iBAAO,KAAKL,IAAL,CAAUM,aAAjB;AACD;AAZ6B;;AAAA;AAAA,OAAhC;;;;cAE4B;;;;AAFfP,uBAAmB,6DAH/B,gEAAU;AACTpD,cAAQ,EAAE;AADD,KAAV,CAG+B,GAAnBoD,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRN,QAAMQ,mBAAmB,GAAG;AACjCC,gBAAU,EAAE;AACVvG,gBAAQ;AADE,OADqB;AAIjCwG,eAAS,EAAE;AACTxG,gBAAQ;AADC,OAJsB;AAOjCyG,WAAK,EAAE;AACLzG,gBAAQ,wBADH;AAELyG,aAAK,8BAFA;AAGLC,qBAAa;AAHR,OAP0B;AAYjCC,kBAAY,EAAE;AACZ3G,gBAAQ,6BADI;AAEZ4G,iBAAS,kCAFG;AAGZC,iBAAS;AAHG,OAZmB;AAiBjCC,cAAQ,EAAE;AACR9G,gBAAQ,2BADA;AAER+G,eAAO;AAFC,OAjBuB;AAqBjCC,sBAAgB,EAAE;AAChBhH,gBAAQ,mCADQ;AAEhBiH,wBAAgB;AAFA,OArBe;AA2BjCC,eAAS,EAAE;AACTlH,gBAAQ,sBADC;AAET6G,iBAAS,mBAFA;AAGTD,iBAAS;AAHA,OA3BsB;AAiCjCO,0BAAoB,EAAE;AACpBnH,gBAAQ,wBADY;AAEpBoH,WAAG,eAFiB;AAGpBC,WAAG;AAHiB;AAjCW,KAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6BP,QAAaC,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DArBhC,+DAAS;AACRrE,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,CADD;AAKRD,kBAAY,EAAE,CACZ,4FADY,EAEZ,2GAFY,EAGZ,0FAHY,EAIZ,oFAJY,CALN;AAWRuE,aAAO,EAAE,CACP,4FADO,EAEP,2GAFO,EAGP,0FAHO,EAIP,oFAJO,CAXD;AAiBRC,qBAAe,EAAE,CACf,4FADe;AAjBT,KAAT,CAqBgC,GAApBF,oBAAoB,CAApB","file":"product-config-add-product-config-add-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"page-header border-b\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h2 class=\\\"mr-auto\\\">{{ isEditing ? 'Update' : 'Create' }} {{PageTitle}}</h2>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n            <div class=\\\"card-body\\\">\\n                <div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Order Id</label>\\n                        <div class=\\\"col-md-5\\\">\\n\\n                            <ng-select [formControl]=\\\"addForm.controls['order_id']\\\" (change)=\\\"getMasterData(true)\\\"\\n                                    [items]=\\\"orderListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\"\\n                                    placeholder=\\\"Select Order\\\">\\n                                </ng-select>\\n                                \\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Product <em>*</em></label>\\n                        <div class=\\\"col-md-5\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['product_id']\\\"\\n                                (change)=\\\"setProductDetail($event)\\\" [items]=\\\"productListArray\\\" bindLabel=\\\"label\\\"\\n                                bindValue=\\\"value\\\" placeholder=\\\"Select Product\\\">\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Registration Type\\n                            <em>*</em></label>\\n                        <div class=\\\"col-md-5\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['registration_type']\\\"\\n                                [items]=\\\"registrationTypeArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\"\\n                                (change)=\\\"typeChange()\\\" placeholder=\\\"Select Registration\\\">\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"isSerialShow\\\" class=\\\"form-group row\\\">\\n                        <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Serial Number <em>*</em></label>\\n                        <div class=\\\"col-md-5\\\">\\n                            <ng-select [formControl]=\\\"addForm.controls['maintain_serial_no']\\\" [items]=\\\"serialArray\\\"\\n                                bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Serial\\\">\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<p class=\\\"help is-danger\\\" [class.hide]=\\\"_hide\\\" [innerHTML]=\\\"_text\\\"></p>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ProductConfigService } from 'src/app/service/product-config.service';\n\n@Component({\n  selector: 'app-product-config-add',\n  templateUrl: './product-config-add.component.html'\n})\nexport class ProductConfigAddComponent implements OnInit {\n\n  PageTitle = \"Product Cofiguration\"\n\n  addNewRadio: boolean = false\n  loadingState = false;\n  addForm: FormGroup;\n  registrationTypeArray: any = [];\n  serialArray: any = [];\n  isSerialShow = false;\n  showLoader = false;\n  formErrors = {\n    apierror: null,\n  };\n  isEditing = false;\n  editId = null;\n  orderListArray: any;\n  productListArray: any;\n\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private location: Location,\n    private productconfigService: ProductConfigService,\n  ) {\n    this.addForm = this.fb.group({\n      order_id: [null, Validators.compose([Validators.required])],\n      maintain_serial_no: [null],\n      product_id: [null, Validators.compose([Validators.required])],\n      registration_type: [null, Validators.compose([Validators.required])],\n    });\n\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\n      let id = this.activatedRoute.snapshot.paramMap.get('id');\n      this.editId = id;\n      this.isEditing = true;\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEditing) {\n      this.getEditObject()\n    } else { this.getMasterData(); }\n  }\n\n  typeChange() {\n    if (this.addForm.value.registration_type == 0) {\n      this.isSerialShow = true;\n      this.addForm.get('maintain_serial_no').setValidators(Validators.compose([Validators.required]));\n      this.addForm.get('maintain_serial_no').updateValueAndValidity();\n    } else {\n      this.isSerialShow = false;\n      this.addForm.get('maintain_serial_no').clearValidators();\n      this.addForm.get('maintain_serial_no').updateValueAndValidity();\n    }\n  }\n\n  getMasterData(event = null) {\n    event ? this.addForm.patchValue({ product_id: '' }) : '';\n    const params: any = {};\n    if (this.addForm.value.order_id) {\n      params.order_id = this.addForm.value.order_id;\n    }\n    if (this.isEditing) {\n      params.is_editing = this.isEditing;\n    }\n    this.productconfigService.getProductConfigMasterData(params).subscribe((response) => {\n      if (response.success) {\n        if (this.addForm.value.order_id) {\n          if (this.isEditing) {\n            this.registrationTypeArray = response.data.registration_type;\n            this.serialArray = response.data.serial;\n            this.productListArray = response.data.product;\n          } else {\n            this.productListArray = response.data.product;\n          }\n        } else {\n          this.orderListArray = response.data.order;\n          this.registrationTypeArray = response.data.registration_type;\n          this.serialArray = response.data.serial;\n        }\n      }\n    });\n  }\n\n  setProductDetail(data) {\n    if (data) {\n      this.addForm.patchValue({\n        sku_no: data.sku_no,\n        product_id: data.value,\n        unload_id: data.unload_id,\n        unload_detail_id: data.unload_detail_id,\n        received_qty: data.received_qty\n      });\n    }\n  }\n\n\n  getEditObject() {\n\n    this.productconfigService.getProductConfigById(this.editId).subscribe((response) => {\n      if (response.success) {\n        this.orderListArray = [response.data.order];\n\n        this.addForm.patchValue({\n          order_id: response.data.order.value,\n          product_id: response.data.product.value,\n          registration_type: response.data.registration_type.value,\n        });\n        if (response.data.registration_type.value == 0) {\n          this.isSerialShow = true;\n          this.addForm.patchValue({\n            maintain_serial_no: response.data.serial.value,\n          });\n        }\n        this.typeChange();\n        this.getMasterData();\n      } else {\n        // this.router.navigateByUrl('/inbound/registeration');\n      }\n    });\n  }\n\n\n\n  submitForm(formData: any): void {\n    if (formData.valid) {\n      this.showLoader = true;\n      const data = new FormData();\n      data.append('registration_type', formData.value.registration_type);\n      data.append('order_id', formData.value.order_id);\n      data.append('product_id', formData.value.product_id);\n      if (this.isSerialShow) { data.append('maintain_serial_no', formData.value.maintain_serial_no); }\n      if (this.isEditing) {\n        this.productconfigService.editProductConfig(this.editId, data).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.back();\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      } else {\n        this.productconfigService.addProductConfig(data).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.back();\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      }\n    }\n  }\n  back() {\n    this.location.back();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ProductConfigAddComponent } from './product-config-add.component';\nimport { ProductConfigService } from 'src/app/service/product-config.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductConfigAddComponent\n  }\n]\n\n@NgModule({\n  declarations: [ProductConfigAddComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormValidationModule,\n    NgSelectModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ], providers: [ProductConfigService]\n})\n\nexport class ProductConfigAddModule { }\n\n\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-control-error',\r\n  templateUrl: './control-error.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ControlErrorComponent implements OnInit {\r\n\r\n  _text;\r\n  _hide = true;\r\n\r\n  @Input() set text(value) {\r\n    if (value !== this._text) {\r\n      this._text = value;\r\n      this._hide = !value;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[controlErrorContainer]'\r\n})\r\nexport class ControlErrorContainerDirective {\r\n\r\n  constructor(public vcr: ViewContainerRef) { }\r\n\r\n}\r\n","import {\r\n  Directive, Optional, ViewContainerRef, ComponentFactoryResolver,\r\n  ComponentRef, Input, Host, OnInit, OnDestroy\r\n} from '@angular/core';\r\nimport { NgControl, AbstractControl } from '@angular/forms';\r\nimport { ControlErrorComponent } from '../control-error/control-error.component';\r\nimport { ControlErrorContainerDirective } from './control-error-container.directive';\r\nimport { FormSubmitDirective } from './form-submit.directive';\r\nimport { merge, EMPTY, Observable } from 'rxjs';\r\nimport { VALIDATION_MESSAGES } from '../form-errors';\r\n\r\n\r\n@Directive({\r\n  selector: '[formControl], [formControlName]'\r\n})\r\nexport class ControlErrorsDirective implements OnInit, OnDestroy {\r\n\r\n  ref: ComponentRef<ControlErrorComponent>;\r\n  container: ViewContainerRef;\r\n  submit$: Observable<Event>;\r\n  @Input() customErrors = {};\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private resolver: ComponentFactoryResolver,\r\n    @Optional() controlErrorContainer: ControlErrorContainerDirective,\r\n    @Optional() @Host() private form: FormSubmitDirective,\r\n    private controlDir: NgControl) {\r\n    this.container = controlErrorContainer ? controlErrorContainer.vcr : vcr;\r\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control && this.control.valueChanges) {\r\n      merge(\r\n        this.control.valueChanges,\r\n        this.submit$\r\n      ).subscribe((v) => {\r\n        const controlErrors = this.control.errors;\r\n        if (controlErrors) {\r\n          const control_name = this.getFormControlName(this.control);\r\n          // console.log(control_name, controlErrors);\r\n          const firstKey = Object.keys(controlErrors)[0];\r\n          const messages = VALIDATION_MESSAGES[control_name];\r\n          if (messages !== undefined && messages !== null && messages !== '') {\r\n            this.setError(messages[firstKey]);\r\n          }\r\n        } else if (this.ref) {\r\n          this.setError(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getFormControlName(c: AbstractControl): string | null {\r\n    const formGroup = c.parent.controls;\r\n    return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\r\n  }\r\n\r\n  get control() {\r\n    return this.controlDir.control;\r\n  }\r\n\r\n  setError(text: string) {\r\n    if (!this.ref) {\r\n      const factory = this.resolver.resolveComponentFactory(ControlErrorComponent);\r\n      this.ref = this.container.createComponent(factory);\r\n    }\r\n\r\n    this.ref.instance.text = text;\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n  selector: 'form'\r\n})\r\nexport class FormSubmitDirective {\r\n\r\n  constructor(private host: ElementRef<HTMLFormElement>) { }\r\n\r\n  submit$ = fromEvent(this.element, 'submit').pipe(tap(() => {\r\n    if (this.element.classList.contains('submitted') === false) {\r\n      this.element.classList.add('submitted');\r\n    }\r\n  }), shareReplay(1));\r\n\r\n  get element() {\r\n    return this.host.nativeElement;\r\n  }\r\n\r\n}\r\n","export const VALIDATION_MESSAGES = {\r\n  first_name: {\r\n    required: `* Please enter first name`,\r\n  },\r\n  last_name: {\r\n    required: `* Please enter last name`,\r\n  },\r\n  email: {\r\n    required: `* Please enter email`,\r\n    email: `* Please enter valid email`,\r\n    validateEmail: `* Please enter valid email`,\r\n  },\r\n  phone_number: {\r\n    required: `Please enter phone number`,\r\n    minlength: `Please enter at least 8 digits`,\r\n    maxlength: `Please enter at least 18 digits`\r\n  },\r\n  password: {\r\n    required: `* Please enter password`,\r\n    pattern: `* Password must contains at least 6 characters`,\r\n  },\r\n  confirm_password: {\r\n    required: `* Please enter confirm password`,\r\n    validatePassword: `* Your Password is not matched`,\r\n  },\r\n\r\n \r\n  login_pin: {\r\n    required: `* Please enter PIN`,\r\n    maxlength: `Pin Max 4 Digit`,\r\n    minlength: `Please enter at least 4 digits`,\r\n  },\r\n \r\n  number_tag_to_create: {\r\n    required: `* Please enter vlaue`,\r\n    max: `Maximum 100`,\r\n    min:` Minimum 1`\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormSubmitDirective } from './directive/form-submit.directive';\r\nimport { ControlErrorsDirective } from './directive/control-errors.directive';\r\nimport { ControlErrorContainerDirective } from './directive/control-error-container.directive';\r\nimport { ControlErrorComponent } from './control-error/control-error.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  exports: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  entryComponents: [\r\n    ControlErrorComponent\r\n  ]\r\n})\r\nexport class FormValidationModule { }\r\n"]}